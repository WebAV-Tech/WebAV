!(function(){"use strict";var Ql=Object.defineProperty,Bl=Object.defineProperties;var wl=Object.getOwnPropertyDescriptors;var Fl=Object.getOwnPropertySymbols;var Pl=Object.prototype.hasOwnProperty,El=Object.prototype.propertyIsEnumerable;var Jl=(S,x,F)=>x in S?Ql(S,x,{enumerable:!0,configurable:!0,writable:!0,value:F}):S[x]=F,hl=(S,x)=>{for(var F in x||(x={}))Pl.call(x,F)&&Jl(S,F,x[F]);if(Fl)for(var F of Fl(x))El.call(x,F)&&Jl(S,F,x[F]);return S},xl=(S,x)=>Bl(S,wl(x));var dl=(S,x,F)=>new Promise((Xl,bl)=>{var ul=N=>{try{I(F.next(N))}catch(k){bl(k)}},Gl=N=>{try{I(F.throw(N))}catch(k){bl(k)}},I=N=>N.done?Xl(N.value):Promise.resolve(N.value).then(ul,Gl);I((F=F.apply(S,x)).next())});(self.webpackChunkWebAV_Doc_Site=self.webpackChunkWebAV_Doc_Site||[]).push([[927],{26927:function(S,x,F){F.r(x),F.d(x,{AVRecorder:function(){return gl}});var Xl=Object.defineProperty,bl=(h,m,e)=>m in h?Xl(h,m,{enumerable:!0,configurable:!0,writable:!0,value:e}):h[m]=e,ul=(h,m,e)=>(bl(h,typeof m!="symbol"?m+"":m,e),e),Gl=(h,m,e)=>{if(!m.has(h))throw TypeError("Cannot "+e)},I=(h,m,e)=>(Gl(h,m,"read from private field"),e?e.call(h):m.get(h)),N=(h,m,e)=>{if(m.has(h))throw TypeError("Cannot add the same private member more than once");m instanceof WeakSet?m.add(h):m.set(h,e)},k=(h,m,e,G)=>(Gl(h,m,"write to private field"),G?G.call(h,e):m.set(h,e),e),Hl=Object.defineProperty,Il=(h,m,e)=>m in h?Hl(h,m,{enumerable:!0,configurable:!0,writable:!0,value:e}):h[m]=e,f=(h,m,e)=>(Il(h,typeof m!="symbol"?m+"":m,e),e),Vl=(h,m,e)=>{if(!m.has(h))throw TypeError("Cannot "+e)},Y=(h,m,e)=>(Vl(h,m,"read from private field"),e?e.call(h):m.get(h)),E=(h,m,e)=>{if(m.has(h))throw TypeError("Cannot add the same private member more than once");m instanceof WeakSet?m.add(h):m.set(h,e)},D=(h,m,e,G)=>(Vl(h,m,"write to private field"),G?G.call(h,e):m.set(h,e),e),Sl=(h,m,e)=>(Vl(h,m,"access private method"),e);let cl=1;const ol={debug:(...h)=>{cl<=0&&console.debug(...h)},info:(...h)=>{cl<=1&&console.info(...h)},warn:(...h)=>{cl<=2&&console.warn(...h)},error:(...h)=>{cl<=3&&console.error(...h)}},Zl=new Map,T=xl(hl({setLogLevel:h=>{var m;cl=(m=Zl.get(h))!=null?m:1}},ol),{create:h=>Object.fromEntries(Object.entries(ol).map(([m,e])=>[m,(...G)=>e(h,...G)]))});Zl.set(T.debug,0),Zl.set(T.info,1),Zl.set(T.warn,2),Zl.set(T.error,3);const Nl=()=>{let h,m=16.6;self.onmessage=e=>{e.data.event==="start"&&(self.clearInterval(h),h=self.setInterval(()=>{self.postMessage({})},m)),e.data.event==="stop"&&self.clearInterval(h)}},Ml=()=>{const h=new Blob([`(${Nl.toString()})()`]),m=URL.createObjectURL(h);return new Worker(m)},Kl=new Map;let Rl=1;const Ul=Ml();Ul.onmessage=()=>{Rl+=1;for(const[h,m]of Kl.entries())Rl%h===0&&m.forEach(e=>e())};function Cl(h){return Array(h.numberOfChannels).fill(0).map((m,e)=>h.getChannelData(e))}function Ll(h,m,e){const G=e-m,R=new Float32Array(G);let o=0;for(;o<G;)R[o]=h[(m+o)%h.length],o+=1;return R}var kl={};(function(h){var m=function(){var l=new Date,d=4,c=3,t=2,a=1,n=d,b={setLogLevel:function(s){s==this.debug?n=a:s==this.info?n=t:s==this.warn?n=c:(s==this.error,n=d)},debug:function(s,X){console.debug===void 0&&(console.debug=console.log),a>=n&&console.debug("["+m.getDurationString(new Date-l,1e3)+"]","["+s+"]",X)},log:function(s,X){this.debug(s.msg)},info:function(s,X){t>=n&&console.info("["+m.getDurationString(new Date-l,1e3)+"]","["+s+"]",X)},warn:function(s,X){c>=n&&console.warn("["+m.getDurationString(new Date-l,1e3)+"]","["+s+"]",X)},error:function(s,X){d>=n&&console.error("["+m.getDurationString(new Date-l,1e3)+"]","["+s+"]",X)}};return b}();m.getDurationString=function(l,d){var c;function t(p,V){for(var y=""+p,r=y.split(".");r[0].length<V;)r[0]="0"+r[0];return r.join(".")}l<0?(c=!0,l=-l):c=!1;var a=d||1,n=l/a,b=Math.floor(n/3600);n-=b*3600;var s=Math.floor(n/60);n-=s*60;var X=n*1e3;return n=Math.floor(n),X-=n*1e3,X=Math.floor(X),(c?"-":"")+b+":"+t(s,2)+":"+t(n,2)+"."+t(X,3)},m.printRanges=function(l){var d=l.length;if(d>0){for(var c="",t=0;t<d;t++)t>0&&(c+=","),c+="["+m.getDurationString(l.start(t))+","+m.getDurationString(l.end(t))+"]";return c}else return"(empty)"},h.Log=m;var e=function(l){if(l instanceof ArrayBuffer)this.buffer=l,this.dataview=new DataView(l);else throw"Needs an array buffer";this.position=0};e.prototype.getPosition=function(){return this.position},e.prototype.getEndPosition=function(){return this.buffer.byteLength},e.prototype.getLength=function(){return this.buffer.byteLength},e.prototype.seek=function(l){var d=Math.max(0,Math.min(this.buffer.byteLength,l));return this.position=isNaN(d)||!isFinite(d)?0:d,!0},e.prototype.isEos=function(){return this.getPosition()>=this.getEndPosition()},e.prototype.readAnyInt=function(l,d){var c=0;if(this.position+l<=this.buffer.byteLength){switch(l){case 1:d?c=this.dataview.getInt8(this.position):c=this.dataview.getUint8(this.position);break;case 2:d?c=this.dataview.getInt16(this.position):c=this.dataview.getUint16(this.position);break;case 3:if(d)throw"No method for reading signed 24 bits values";c=this.dataview.getUint8(this.position)<<16,c|=this.dataview.getUint8(this.position+1)<<8,c|=this.dataview.getUint8(this.position+2);break;case 4:d?c=this.dataview.getInt32(this.position):c=this.dataview.getUint32(this.position);break;case 8:if(d)throw"No method for reading signed 64 bits values";c=this.dataview.getUint32(this.position)<<32,c|=this.dataview.getUint32(this.position+4);break;default:throw"readInt method not implemented for size: "+l}return this.position+=l,c}else throw"Not enough bytes in buffer"},e.prototype.readUint8=function(){return this.readAnyInt(1,!1)},e.prototype.readUint16=function(){return this.readAnyInt(2,!1)},e.prototype.readUint24=function(){return this.readAnyInt(3,!1)},e.prototype.readUint32=function(){return this.readAnyInt(4,!1)},e.prototype.readUint64=function(){return this.readAnyInt(8,!1)},e.prototype.readString=function(l){if(this.position+l<=this.buffer.byteLength){for(var d="",c=0;c<l;c++)d+=String.fromCharCode(this.readUint8());return d}else throw"Not enough bytes in buffer"},e.prototype.readCString=function(){for(var l=[];;){var d=this.readUint8();if(d!==0)l.push(d);else break}return String.fromCharCode.apply(null,l)},e.prototype.readInt8=function(){return this.readAnyInt(1,!0)},e.prototype.readInt16=function(){return this.readAnyInt(2,!0)},e.prototype.readInt32=function(){return this.readAnyInt(4,!0)},e.prototype.readInt64=function(){return this.readAnyInt(8,!1)},e.prototype.readUint8Array=function(l){for(var d=new Uint8Array(l),c=0;c<l;c++)d[c]=this.readUint8();return d},e.prototype.readInt16Array=function(l){for(var d=new Int16Array(l),c=0;c<l;c++)d[c]=this.readInt16();return d},e.prototype.readUint16Array=function(l){for(var d=new Int16Array(l),c=0;c<l;c++)d[c]=this.readUint16();return d},e.prototype.readUint32Array=function(l){for(var d=new Uint32Array(l),c=0;c<l;c++)d[c]=this.readUint32();return d},e.prototype.readInt32Array=function(l){for(var d=new Int32Array(l),c=0;c<l;c++)d[c]=this.readInt32();return d},h.MP4BoxStream=e;var G=function(l,d,c){this._byteOffset=d||0,l instanceof ArrayBuffer?this.buffer=l:typeof l=="object"?(this.dataView=l,d&&(this._byteOffset+=d)):this.buffer=new ArrayBuffer(l||0),this.position=0,this.endianness=c!=null?c:G.LITTLE_ENDIAN};G.prototype={},G.prototype.getPosition=function(){return this.position},G.prototype._realloc=function(l){if(this._dynamicSize){var d=this._byteOffset+this.position+l,c=this._buffer.byteLength;if(d<=c){d>this._byteLength&&(this._byteLength=d);return}for(c<1&&(c=1);d>c;)c*=2;var t=new ArrayBuffer(c),a=new Uint8Array(this._buffer),n=new Uint8Array(t,0,a.length);n.set(a),this.buffer=t,this._byteLength=d}},G.prototype._trimAlloc=function(){if(this._byteLength!=this._buffer.byteLength){var l=new ArrayBuffer(this._byteLength),d=new Uint8Array(l),c=new Uint8Array(this._buffer,0,d.length);d.set(c),this.buffer=l}},G.BIG_ENDIAN=!1,G.LITTLE_ENDIAN=!0,G.prototype._byteLength=0,Object.defineProperty(G.prototype,"byteLength",{get:function(){return this._byteLength-this._byteOffset}}),Object.defineProperty(G.prototype,"buffer",{get:function(){return this._trimAlloc(),this._buffer},set:function(l){this._buffer=l,this._dataView=new DataView(this._buffer,this._byteOffset),this._byteLength=this._buffer.byteLength}}),Object.defineProperty(G.prototype,"byteOffset",{get:function(){return this._byteOffset},set:function(l){this._byteOffset=l,this._dataView=new DataView(this._buffer,this._byteOffset),this._byteLength=this._buffer.byteLength}}),Object.defineProperty(G.prototype,"dataView",{get:function(){return this._dataView},set:function(l){this._byteOffset=l.byteOffset,this._buffer=l.buffer,this._dataView=new DataView(this._buffer,this._byteOffset),this._byteLength=this._byteOffset+l.byteLength}}),G.prototype.seek=function(l){var d=Math.max(0,Math.min(this.byteLength,l));this.position=isNaN(d)||!isFinite(d)?0:d},G.prototype.isEof=function(){return this.position>=this._byteLength},G.prototype.mapUint8Array=function(l){this._realloc(l*1);var d=new Uint8Array(this._buffer,this.byteOffset+this.position,l);return this.position+=l*1,d},G.prototype.readInt32Array=function(l,d){l=l!=null?l:this.byteLength-this.position/4;var c=new Int32Array(l);return G.memcpy(c.buffer,0,this.buffer,this.byteOffset+this.position,l*c.BYTES_PER_ELEMENT),G.arrayToNative(c,d!=null?d:this.endianness),this.position+=c.byteLength,c},G.prototype.readInt16Array=function(l,d){l=l!=null?l:this.byteLength-this.position/2;var c=new Int16Array(l);return G.memcpy(c.buffer,0,this.buffer,this.byteOffset+this.position,l*c.BYTES_PER_ELEMENT),G.arrayToNative(c,d!=null?d:this.endianness),this.position+=c.byteLength,c},G.prototype.readInt8Array=function(l){l=l!=null?l:this.byteLength-this.position;var d=new Int8Array(l);return G.memcpy(d.buffer,0,this.buffer,this.byteOffset+this.position,l*d.BYTES_PER_ELEMENT),this.position+=d.byteLength,d},G.prototype.readUint32Array=function(l,d){l=l!=null?l:this.byteLength-this.position/4;var c=new Uint32Array(l);return G.memcpy(c.buffer,0,this.buffer,this.byteOffset+this.position,l*c.BYTES_PER_ELEMENT),G.arrayToNative(c,d!=null?d:this.endianness),this.position+=c.byteLength,c},G.prototype.readUint16Array=function(l,d){l=l!=null?l:this.byteLength-this.position/2;var c=new Uint16Array(l);return G.memcpy(c.buffer,0,this.buffer,this.byteOffset+this.position,l*c.BYTES_PER_ELEMENT),G.arrayToNative(c,d!=null?d:this.endianness),this.position+=c.byteLength,c},G.prototype.readUint8Array=function(l){l=l!=null?l:this.byteLength-this.position;var d=new Uint8Array(l);return G.memcpy(d.buffer,0,this.buffer,this.byteOffset+this.position,l*d.BYTES_PER_ELEMENT),this.position+=d.byteLength,d},G.prototype.readFloat64Array=function(l,d){l=l!=null?l:this.byteLength-this.position/8;var c=new Float64Array(l);return G.memcpy(c.buffer,0,this.buffer,this.byteOffset+this.position,l*c.BYTES_PER_ELEMENT),G.arrayToNative(c,d!=null?d:this.endianness),this.position+=c.byteLength,c},G.prototype.readFloat32Array=function(l,d){l=l!=null?l:this.byteLength-this.position/4;var c=new Float32Array(l);return G.memcpy(c.buffer,0,this.buffer,this.byteOffset+this.position,l*c.BYTES_PER_ELEMENT),G.arrayToNative(c,d!=null?d:this.endianness),this.position+=c.byteLength,c},G.prototype.readInt32=function(l){var d=this._dataView.getInt32(this.position,l!=null?l:this.endianness);return this.position+=4,d},G.prototype.readInt16=function(l){var d=this._dataView.getInt16(this.position,l!=null?l:this.endianness);return this.position+=2,d},G.prototype.readInt8=function(){var l=this._dataView.getInt8(this.position);return this.position+=1,l},G.prototype.readUint32=function(l){var d=this._dataView.getUint32(this.position,l!=null?l:this.endianness);return this.position+=4,d},G.prototype.readUint16=function(l){var d=this._dataView.getUint16(this.position,l!=null?l:this.endianness);return this.position+=2,d},G.prototype.readUint8=function(){var l=this._dataView.getUint8(this.position);return this.position+=1,l},G.prototype.readFloat32=function(l){var d=this._dataView.getFloat32(this.position,l!=null?l:this.endianness);return this.position+=4,d},G.prototype.readFloat64=function(l){var d=this._dataView.getFloat64(this.position,l!=null?l:this.endianness);return this.position+=8,d},G.endianness=new Int8Array(new Int16Array([1]).buffer)[0]>0,G.memcpy=function(l,d,c,t,a){var n=new Uint8Array(l,d,a),b=new Uint8Array(c,t,a);n.set(b)},G.arrayToNative=function(l,d){return d==this.endianness?l:this.flipArrayEndianness(l)},G.nativeToEndian=function(l,d){return this.endianness==d?l:this.flipArrayEndianness(l)},G.flipArrayEndianness=function(l){for(var d=new Uint8Array(l.buffer,l.byteOffset,l.byteLength),c=0;c<l.byteLength;c+=l.BYTES_PER_ELEMENT)for(var t=c+l.BYTES_PER_ELEMENT-1,a=c;t>a;t--,a++){var n=d[a];d[a]=d[t],d[t]=n}return l},G.prototype.failurePosition=0,String.fromCharCodeUint8=function(l){for(var d=[],c=0;c<l.length;c++)d[c]=l[c];return String.fromCharCode.apply(null,d)},G.prototype.readString=function(l,d){return d==null||d=="ASCII"?String.fromCharCodeUint8.apply(null,[this.mapUint8Array(l!=null?l:this.byteLength-this.position)]):new TextDecoder(d).decode(this.mapUint8Array(l))},G.prototype.readCString=function(l){var d=this.byteLength-this.position,c=new Uint8Array(this._buffer,this._byteOffset+this.position),t=d;l!=null&&(t=Math.min(l,d));for(var a=0;a<t&&c[a]!==0;a++);var n=String.fromCharCodeUint8.apply(null,[this.mapUint8Array(a)]);return l!=null?this.position+=t-a:a!=d&&(this.position+=1),n};var R=Math.pow(2,32);G.prototype.readInt64=function(){return this.readInt32()*R+this.readUint32()},G.prototype.readUint64=function(){return this.readUint32()*R+this.readUint32()},G.prototype.readInt64=function(){return this.readUint32()*R+this.readUint32()},G.prototype.readUint24=function(){return(this.readUint8()<<16)+(this.readUint8()<<8)+this.readUint8()},h.DataStream=G,G.prototype.save=function(l){var d=new Blob([this.buffer]);if(window.URL&&URL.createObjectURL){var c=window.URL.createObjectURL(d),t=document.createElement("a");document.body.appendChild(t),t.setAttribute("href",c),t.setAttribute("download",l),t.setAttribute("target","_self"),t.click(),window.URL.revokeObjectURL(c)}else throw"DataStream.save: Can't create object URL."},G.prototype._dynamicSize=!0,Object.defineProperty(G.prototype,"dynamicSize",{get:function(){return this._dynamicSize},set:function(l){l||this._trimAlloc(),this._dynamicSize=l}}),G.prototype.shift=function(l){var d=new ArrayBuffer(this._byteLength-l),c=new Uint8Array(d),t=new Uint8Array(this._buffer,l,c.length);c.set(t),this.buffer=d,this.position-=l},G.prototype.writeInt32Array=function(l,d){if(this._realloc(l.length*4),l instanceof Int32Array&&this.byteOffset+this.position%l.BYTES_PER_ELEMENT===0)G.memcpy(this._buffer,this.byteOffset+this.position,l.buffer,0,l.byteLength),this.mapInt32Array(l.length,d);else for(var c=0;c<l.length;c++)this.writeInt32(l[c],d)},G.prototype.writeInt16Array=function(l,d){if(this._realloc(l.length*2),l instanceof Int16Array&&this.byteOffset+this.position%l.BYTES_PER_ELEMENT===0)G.memcpy(this._buffer,this.byteOffset+this.position,l.buffer,0,l.byteLength),this.mapInt16Array(l.length,d);else for(var c=0;c<l.length;c++)this.writeInt16(l[c],d)},G.prototype.writeInt8Array=function(l){if(this._realloc(l.length*1),l instanceof Int8Array&&this.byteOffset+this.position%l.BYTES_PER_ELEMENT===0)G.memcpy(this._buffer,this.byteOffset+this.position,l.buffer,0,l.byteLength),this.mapInt8Array(l.length);else for(var d=0;d<l.length;d++)this.writeInt8(l[d])},G.prototype.writeUint32Array=function(l,d){if(this._realloc(l.length*4),l instanceof Uint32Array&&this.byteOffset+this.position%l.BYTES_PER_ELEMENT===0)G.memcpy(this._buffer,this.byteOffset+this.position,l.buffer,0,l.byteLength),this.mapUint32Array(l.length,d);else for(var c=0;c<l.length;c++)this.writeUint32(l[c],d)},G.prototype.writeUint16Array=function(l,d){if(this._realloc(l.length*2),l instanceof Uint16Array&&this.byteOffset+this.position%l.BYTES_PER_ELEMENT===0)G.memcpy(this._buffer,this.byteOffset+this.position,l.buffer,0,l.byteLength),this.mapUint16Array(l.length,d);else for(var c=0;c<l.length;c++)this.writeUint16(l[c],d)},G.prototype.writeUint8Array=function(l){if(this._realloc(l.length*1),l instanceof Uint8Array&&this.byteOffset+this.position%l.BYTES_PER_ELEMENT===0)G.memcpy(this._buffer,this.byteOffset+this.position,l.buffer,0,l.byteLength),this.mapUint8Array(l.length);else for(var d=0;d<l.length;d++)this.writeUint8(l[d])},G.prototype.writeFloat64Array=function(l,d){if(this._realloc(l.length*8),l instanceof Float64Array&&this.byteOffset+this.position%l.BYTES_PER_ELEMENT===0)G.memcpy(this._buffer,this.byteOffset+this.position,l.buffer,0,l.byteLength),this.mapFloat64Array(l.length,d);else for(var c=0;c<l.length;c++)this.writeFloat64(l[c],d)},G.prototype.writeFloat32Array=function(l,d){if(this._realloc(l.length*4),l instanceof Float32Array&&this.byteOffset+this.position%l.BYTES_PER_ELEMENT===0)G.memcpy(this._buffer,this.byteOffset+this.position,l.buffer,0,l.byteLength),this.mapFloat32Array(l.length,d);else for(var c=0;c<l.length;c++)this.writeFloat32(l[c],d)},G.prototype.writeInt32=function(l,d){this._realloc(4),this._dataView.setInt32(this.position,l,d!=null?d:this.endianness),this.position+=4},G.prototype.writeInt16=function(l,d){this._realloc(2),this._dataView.setInt16(this.position,l,d!=null?d:this.endianness),this.position+=2},G.prototype.writeInt8=function(l){this._realloc(1),this._dataView.setInt8(this.position,l),this.position+=1},G.prototype.writeUint32=function(l,d){this._realloc(4),this._dataView.setUint32(this.position,l,d!=null?d:this.endianness),this.position+=4},G.prototype.writeUint16=function(l,d){this._realloc(2),this._dataView.setUint16(this.position,l,d!=null?d:this.endianness),this.position+=2},G.prototype.writeUint8=function(l){this._realloc(1),this._dataView.setUint8(this.position,l),this.position+=1},G.prototype.writeFloat32=function(l,d){this._realloc(4),this._dataView.setFloat32(this.position,l,d!=null?d:this.endianness),this.position+=4},G.prototype.writeFloat64=function(l,d){this._realloc(8),this._dataView.setFloat64(this.position,l,d!=null?d:this.endianness),this.position+=8},G.prototype.writeUCS2String=function(l,d,c){c==null&&(c=l.length);for(var t=0;t<l.length&&t<c;t++)this.writeUint16(l.charCodeAt(t),d);for(;t<c;t++)this.writeUint16(0)},G.prototype.writeString=function(l,d,c){var t=0;if(d==null||d=="ASCII")if(c!=null){var a=Math.min(l.length,c);for(t=0;t<a;t++)this.writeUint8(l.charCodeAt(t));for(;t<c;t++)this.writeUint8(0)}else for(t=0;t<l.length;t++)this.writeUint8(l.charCodeAt(t));else this.writeUint8Array(new TextEncoder(d).encode(l.substring(0,c)))},G.prototype.writeCString=function(l,d){var c=0;if(d!=null){var t=Math.min(l.length,d);for(c=0;c<t;c++)this.writeUint8(l.charCodeAt(c));for(;c<d;c++)this.writeUint8(0)}else{for(c=0;c<l.length;c++)this.writeUint8(l.charCodeAt(c));this.writeUint8(0)}},G.prototype.writeStruct=function(l,d){for(var c=0;c<l.length;c+=2){var t=l[c+1];this.writeType(t,d[l[c]],d)}},G.prototype.writeType=function(l,d,c){var t;if(typeof l=="function")return l(this,d);if(typeof l=="object"&&!(l instanceof Array))return l.set(this,d,c);var a=null,n="ASCII",b=this.position;switch(typeof l=="string"&&/:/.test(l)&&(t=l.split(":"),l=t[0],a=parseInt(t[1])),typeof l=="string"&&/,/.test(l)&&(t=l.split(","),l=t[0],n=parseInt(t[1])),l){case"uint8":this.writeUint8(d);break;case"int8":this.writeInt8(d);break;case"uint16":this.writeUint16(d,this.endianness);break;case"int16":this.writeInt16(d,this.endianness);break;case"uint32":this.writeUint32(d,this.endianness);break;case"int32":this.writeInt32(d,this.endianness);break;case"float32":this.writeFloat32(d,this.endianness);break;case"float64":this.writeFloat64(d,this.endianness);break;case"uint16be":this.writeUint16(d,G.BIG_ENDIAN);break;case"int16be":this.writeInt16(d,G.BIG_ENDIAN);break;case"uint32be":this.writeUint32(d,G.BIG_ENDIAN);break;case"int32be":this.writeInt32(d,G.BIG_ENDIAN);break;case"float32be":this.writeFloat32(d,G.BIG_ENDIAN);break;case"float64be":this.writeFloat64(d,G.BIG_ENDIAN);break;case"uint16le":this.writeUint16(d,G.LITTLE_ENDIAN);break;case"int16le":this.writeInt16(d,G.LITTLE_ENDIAN);break;case"uint32le":this.writeUint32(d,G.LITTLE_ENDIAN);break;case"int32le":this.writeInt32(d,G.LITTLE_ENDIAN);break;case"float32le":this.writeFloat32(d,G.LITTLE_ENDIAN);break;case"float64le":this.writeFloat64(d,G.LITTLE_ENDIAN);break;case"cstring":this.writeCString(d,a);break;case"string":this.writeString(d,n,a);break;case"u16string":this.writeUCS2String(d,this.endianness,a);break;case"u16stringle":this.writeUCS2String(d,G.LITTLE_ENDIAN,a);break;case"u16stringbe":this.writeUCS2String(d,G.BIG_ENDIAN,a);break;default:if(l.length==3){for(var s=l[1],X=0;X<d.length;X++)this.writeType(s,d[X]);break}else{this.writeStruct(l,d);break}}a!=null&&(this.position=b,this._realloc(a),this.position=b+a)},G.prototype.writeUint64=function(l){var d=Math.floor(l/R);this.writeUint32(d),this.writeUint32(l&4294967295)},G.prototype.writeUint24=function(l){this.writeUint8((l&16711680)>>16),this.writeUint8((l&65280)>>8),this.writeUint8(l&255)},G.prototype.adjustUint32=function(l,d){var c=this.position;this.seek(l),this.writeUint32(d),this.seek(c)},G.prototype.mapInt32Array=function(l,d){this._realloc(l*4);var c=new Int32Array(this._buffer,this.byteOffset+this.position,l);return G.arrayToNative(c,d!=null?d:this.endianness),this.position+=l*4,c},G.prototype.mapInt16Array=function(l,d){this._realloc(l*2);var c=new Int16Array(this._buffer,this.byteOffset+this.position,l);return G.arrayToNative(c,d!=null?d:this.endianness),this.position+=l*2,c},G.prototype.mapInt8Array=function(l){this._realloc(l*1);var d=new Int8Array(this._buffer,this.byteOffset+this.position,l);return this.position+=l*1,d},G.prototype.mapUint32Array=function(l,d){this._realloc(l*4);var c=new Uint32Array(this._buffer,this.byteOffset+this.position,l);return G.arrayToNative(c,d!=null?d:this.endianness),this.position+=l*4,c},G.prototype.mapUint16Array=function(l,d){this._realloc(l*2);var c=new Uint16Array(this._buffer,this.byteOffset+this.position,l);return G.arrayToNative(c,d!=null?d:this.endianness),this.position+=l*2,c},G.prototype.mapFloat64Array=function(l,d){this._realloc(l*8);var c=new Float64Array(this._buffer,this.byteOffset+this.position,l);return G.arrayToNative(c,d!=null?d:this.endianness),this.position+=l*8,c},G.prototype.mapFloat32Array=function(l,d){this._realloc(l*4);var c=new Float32Array(this._buffer,this.byteOffset+this.position,l);return G.arrayToNative(c,d!=null?d:this.endianness),this.position+=l*4,c};var o=function(l){this.buffers=[],this.bufferIndex=-1,l&&(this.insertBuffer(l),this.bufferIndex=0)};o.prototype=new G(new ArrayBuffer,0,G.BIG_ENDIAN),o.prototype.initialized=function(){var l;return this.bufferIndex>-1?!0:this.buffers.length>0?(l=this.buffers[0],l.fileStart===0?(this.buffer=l,this.bufferIndex=0,m.debug("MultiBufferStream","Stream ready for parsing"),!0):(m.warn("MultiBufferStream","The first buffer should have a fileStart of 0"),this.logBufferLevel(),!1)):(m.warn("MultiBufferStream","No buffer to start parsing from"),this.logBufferLevel(),!1)},ArrayBuffer.concat=function(l,d){m.debug("ArrayBuffer","Trying to create a new buffer of size: "+(l.byteLength+d.byteLength));var c=new Uint8Array(l.byteLength+d.byteLength);return c.set(new Uint8Array(l),0),c.set(new Uint8Array(d),l.byteLength),c.buffer},o.prototype.reduceBuffer=function(l,d,c){var t;return t=new Uint8Array(c),t.set(new Uint8Array(l,d,c)),t.buffer.fileStart=l.fileStart+d,t.buffer.usedBytes=0,t.buffer},o.prototype.insertBuffer=function(l){for(var d=!0,c=0;c<this.buffers.length;c++){var t=this.buffers[c];if(l.fileStart<=t.fileStart){if(l.fileStart===t.fileStart)if(l.byteLength>t.byteLength){this.buffers.splice(c,1),c--;continue}else m.warn("MultiBufferStream","Buffer (fileStart: "+l.fileStart+" - Length: "+l.byteLength+") already appended, ignoring");else l.fileStart+l.byteLength<=t.fileStart||(l=this.reduceBuffer(l,0,t.fileStart-l.fileStart)),m.debug("MultiBufferStream","Appending new buffer (fileStart: "+l.fileStart+" - Length: "+l.byteLength+")"),this.buffers.splice(c,0,l),c===0&&(this.buffer=l);d=!1;break}else if(l.fileStart<t.fileStart+t.byteLength){var a=t.fileStart+t.byteLength-l.fileStart,n=l.byteLength-a;if(n>0)l=this.reduceBuffer(l,a,n);else{d=!1;break}}}d&&(m.debug("MultiBufferStream","Appending new buffer (fileStart: "+l.fileStart+" - Length: "+l.byteLength+")"),this.buffers.push(l),c===0&&(this.buffer=l))},o.prototype.logBufferLevel=function(l){var d,c,t,a,n=[],b,s="";for(t=0,a=0,d=0;d<this.buffers.length;d++)c=this.buffers[d],d===0?(b={},n.push(b),b.start=c.fileStart,b.end=c.fileStart+c.byteLength,s+="["+b.start+"-"):b.end===c.fileStart?b.end=c.fileStart+c.byteLength:(b={},b.start=c.fileStart,s+=n[n.length-1].end-1+"], ["+b.start+"-",b.end=c.fileStart+c.byteLength,n.push(b)),t+=c.usedBytes,a+=c.byteLength;n.length>0&&(s+=b.end-1+"]");var X=l?m.info:m.debug;this.buffers.length===0?X("MultiBufferStream","No more buffer in memory"):X("MultiBufferStream",""+this.buffers.length+" stored buffer(s) ("+t+"/"+a+" bytes), continuous ranges: "+s)},o.prototype.cleanBuffers=function(){var l,d;for(l=0;l<this.buffers.length;l++)d=this.buffers[l],d.usedBytes===d.byteLength&&(m.debug("MultiBufferStream","Removing buffer #"+l),this.buffers.splice(l,1),l--)},o.prototype.mergeNextBuffer=function(){var l;if(this.bufferIndex+1<this.buffers.length)if(l=this.buffers[this.bufferIndex+1],l.fileStart===this.buffer.fileStart+this.buffer.byteLength){var d=this.buffer.byteLength,c=this.buffer.usedBytes,t=this.buffer.fileStart;return this.buffers[this.bufferIndex]=ArrayBuffer.concat(this.buffer,l),this.buffer=this.buffers[this.bufferIndex],this.buffers.splice(this.bufferIndex+1,1),this.buffer.usedBytes=c,this.buffer.fileStart=t,m.debug("ISOFile","Concatenating buffer for box parsing (length: "+d+"->"+this.buffer.byteLength+")"),!0}else return!1;else return!1},o.prototype.findPosition=function(l,d,c){var t,a=null,n=-1;for(l===!0?t=0:t=this.bufferIndex;t<this.buffers.length&&(a=this.buffers[t],a.fileStart<=d);)n=t,c&&(a.fileStart+a.byteLength<=d?a.usedBytes=a.byteLength:a.usedBytes=d-a.fileStart,this.logBufferLevel()),t++;return n!==-1?(a=this.buffers[n],a.fileStart+a.byteLength>=d?(m.debug("MultiBufferStream","Found position in existing buffer #"+n),n):-1):-1},o.prototype.findEndContiguousBuf=function(l){var d,c,t,a=l!==void 0?l:this.bufferIndex;if(c=this.buffers[a],this.buffers.length>a+1)for(d=a+1;d<this.buffers.length&&(t=this.buffers[d],t.fileStart===c.fileStart+c.byteLength);d++)c=t;return c.fileStart+c.byteLength},o.prototype.getEndFilePositionAfter=function(l){var d=this.findPosition(!0,l,!1);return d!==-1?this.findEndContiguousBuf(d):l},o.prototype.addUsedBytes=function(l){this.buffer.usedBytes+=l,this.logBufferLevel()},o.prototype.setAllUsedBytes=function(){this.buffer.usedBytes=this.buffer.byteLength,this.logBufferLevel()},o.prototype.seek=function(l,d,c){var t;return t=this.findPosition(d,l,c),t!==-1?(this.buffer=this.buffers[t],this.bufferIndex=t,this.position=l-this.buffer.fileStart,m.debug("MultiBufferStream","Repositioning parser at buffer position: "+this.position),!0):(m.debug("MultiBufferStream","Position "+l+" not found in buffered data"),!1)},o.prototype.getPosition=function(){if(this.bufferIndex===-1||this.buffers[this.bufferIndex]===null)throw"Error accessing position in the MultiBufferStream";return this.buffers[this.bufferIndex].fileStart+this.position},o.prototype.getLength=function(){return this.byteLength},o.prototype.getEndPosition=function(){if(this.bufferIndex===-1||this.buffers[this.bufferIndex]===null)throw"Error accessing position in the MultiBufferStream";return this.buffers[this.bufferIndex].fileStart+this.byteLength},h.MultiBufferStream=o;var H=function(){var l=3,d=4,c=5,t=6,a=[];a[l]="ES_Descriptor",a[d]="DecoderConfigDescriptor",a[c]="DecoderSpecificInfo",a[t]="SLConfigDescriptor",this.getDescriptorName=function(s){return a[s]};var n=this,b={};return this.parseOneDescriptor=function(s){var X=0,p,V,y;for(p=s.readUint8(),y=s.readUint8();y&128;)X=(y&127)<<7,y=s.readUint8();return X+=y&127,m.debug("MPEG4DescriptorParser","Found "+(a[p]||"Descriptor "+p)+", size "+X+" at position "+s.getPosition()),a[p]?V=new b[a[p]](X):V=new b.Descriptor(X),V.parse(s),V},b.Descriptor=function(s,X){this.tag=s,this.size=X,this.descs=[]},b.Descriptor.prototype.parse=function(s){this.data=s.readUint8Array(this.size)},b.Descriptor.prototype.findDescriptor=function(s){for(var X=0;X<this.descs.length;X++)if(this.descs[X].tag==s)return this.descs[X];return null},b.Descriptor.prototype.parseRemainingDescriptors=function(s){for(var X=s.position;s.position<X+this.size;){var p=n.parseOneDescriptor(s);this.descs.push(p)}},b.ES_Descriptor=function(s){b.Descriptor.call(this,l,s)},b.ES_Descriptor.prototype=new b.Descriptor,b.ES_Descriptor.prototype.parse=function(s){if(this.ES_ID=s.readUint16(),this.flags=s.readUint8(),this.size-=3,this.flags&128?(this.dependsOn_ES_ID=s.readUint16(),this.size-=2):this.dependsOn_ES_ID=0,this.flags&64){var X=s.readUint8();this.URL=s.readString(X),this.size-=X+1}else this.URL="";this.flags&32?(this.OCR_ES_ID=s.readUint16(),this.size-=2):this.OCR_ES_ID=0,this.parseRemainingDescriptors(s)},b.ES_Descriptor.prototype.getOTI=function(s){var X=this.findDescriptor(d);return X?X.oti:0},b.ES_Descriptor.prototype.getAudioConfig=function(s){var X=this.findDescriptor(d);if(!X)return null;var p=X.findDescriptor(c);if(p&&p.data){var V=(p.data[0]&248)>>3;return V===31&&p.data.length>=2&&(V=32+((p.data[0]&7)<<3)+((p.data[1]&224)>>5)),V}else return null},b.DecoderConfigDescriptor=function(s){b.Descriptor.call(this,d,s)},b.DecoderConfigDescriptor.prototype=new b.Descriptor,b.DecoderConfigDescriptor.prototype.parse=function(s){this.oti=s.readUint8(),this.streamType=s.readUint8(),this.bufferSize=s.readUint24(),this.maxBitrate=s.readUint32(),this.avgBitrate=s.readUint32(),this.size-=13,this.parseRemainingDescriptors(s)},b.DecoderSpecificInfo=function(s){b.Descriptor.call(this,c,s)},b.DecoderSpecificInfo.prototype=new b.Descriptor,b.SLConfigDescriptor=function(s){b.Descriptor.call(this,t,s)},b.SLConfigDescriptor.prototype=new b.Descriptor,this};h.MPEG4DescriptorParser=H;var Z={ERR_INVALID_DATA:-1,ERR_NOT_ENOUGH_DATA:0,OK:1,BASIC_BOXES:["mdat","idat","free","skip","meco","strk"],FULL_BOXES:["hmhd","nmhd","iods","xml ","bxml","ipro","mere"],CONTAINER_BOXES:[["moov",["trak","pssh"]],["trak"],["edts"],["mdia"],["minf"],["dinf"],["stbl",["sgpd","sbgp"]],["mvex",["trex"]],["moof",["traf"]],["traf",["trun","sgpd","sbgp"]],["vttc"],["tref"],["iref"],["mfra",["tfra"]],["meco"],["hnti"],["hinf"],["strk"],["strd"],["sinf"],["rinf"],["schi"],["trgr"],["udta",["kind"]],["iprp",["ipma"]],["ipco"],["grpl"],["j2kH"],["etyp",["tyco"]]],boxCodes:[],fullBoxCodes:[],containerBoxCodes:[],sampleEntryCodes:{},sampleGroupEntryCodes:[],trackGroupTypes:[],UUIDBoxes:{},UUIDs:[],initialize:function(){Z.FullBox.prototype=new Z.Box,Z.ContainerBox.prototype=new Z.Box,Z.SampleEntry.prototype=new Z.Box,Z.TrackGroupTypeBox.prototype=new Z.FullBox,Z.BASIC_BOXES.forEach(function(l){Z.createBoxCtor(l)}),Z.FULL_BOXES.forEach(function(l){Z.createFullBoxCtor(l)}),Z.CONTAINER_BOXES.forEach(function(l){Z.createContainerBoxCtor(l[0],null,l[1])})},Box:function(l,d,c){this.type=l,this.size=d,this.uuid=c},FullBox:function(l,d,c){Z.Box.call(this,l,d,c),this.flags=0,this.version=0},ContainerBox:function(l,d,c){Z.Box.call(this,l,d,c),this.boxes=[]},SampleEntry:function(l,d,c,t){Z.ContainerBox.call(this,l,d),this.hdr_size=c,this.start=t},SampleGroupEntry:function(l){this.grouping_type=l},TrackGroupTypeBox:function(l,d){Z.FullBox.call(this,l,d)},createBoxCtor:function(l,d){Z.boxCodes.push(l),Z[l+"Box"]=function(c){Z.Box.call(this,l,c)},Z[l+"Box"].prototype=new Z.Box,d&&(Z[l+"Box"].prototype.parse=d)},createFullBoxCtor:function(l,d){Z[l+"Box"]=function(c){Z.FullBox.call(this,l,c)},Z[l+"Box"].prototype=new Z.FullBox,Z[l+"Box"].prototype.parse=function(c){this.parseFullHeader(c),d&&d.call(this,c)}},addSubBoxArrays:function(l){if(l){this.subBoxNames=l;for(var d=l.length,c=0;c<d;c++)this[l[c]+"s"]=[]}},createContainerBoxCtor:function(l,d,c){Z[l+"Box"]=function(t){Z.ContainerBox.call(this,l,t),Z.addSubBoxArrays.call(this,c)},Z[l+"Box"].prototype=new Z.ContainerBox,d&&(Z[l+"Box"].prototype.parse=d)},createMediaSampleEntryCtor:function(l,d,c){Z.sampleEntryCodes[l]=[],Z[l+"SampleEntry"]=function(t,a){Z.SampleEntry.call(this,t,a),Z.addSubBoxArrays.call(this,c)},Z[l+"SampleEntry"].prototype=new Z.SampleEntry,d&&(Z[l+"SampleEntry"].prototype.parse=d)},createSampleEntryCtor:function(l,d,c,t){Z.sampleEntryCodes[l].push(d),Z[d+"SampleEntry"]=function(a){Z[l+"SampleEntry"].call(this,d,a),Z.addSubBoxArrays.call(this,t)},Z[d+"SampleEntry"].prototype=new Z[l+"SampleEntry"],c&&(Z[d+"SampleEntry"].prototype.parse=c)},createEncryptedSampleEntryCtor:function(l,d,c){Z.createSampleEntryCtor.call(this,l,d,c,["sinf"])},createSampleGroupCtor:function(l,d){Z[l+"SampleGroupEntry"]=function(c){Z.SampleGroupEntry.call(this,l,c)},Z[l+"SampleGroupEntry"].prototype=new Z.SampleGroupEntry,d&&(Z[l+"SampleGroupEntry"].prototype.parse=d)},createTrackGroupCtor:function(l,d){Z[l+"TrackGroupTypeBox"]=function(c){Z.TrackGroupTypeBox.call(this,l,c)},Z[l+"TrackGroupTypeBox"].prototype=new Z.TrackGroupTypeBox,d&&(Z[l+"TrackGroupTypeBox"].prototype.parse=d)},createUUIDBox:function(l,d,c,t){Z.UUIDs.push(l),Z.UUIDBoxes[l]=function(a){d?Z.FullBox.call(this,"uuid",a,l):c?Z.ContainerBox.call(this,"uuid",a,l):Z.Box.call(this,"uuid",a,l)},Z.UUIDBoxes[l].prototype=d?new Z.FullBox:c?new Z.ContainerBox:new Z.Box,t&&(d?Z.UUIDBoxes[l].prototype.parse=function(a){this.parseFullHeader(a),t&&t.call(this,a)}:Z.UUIDBoxes[l].prototype.parse=t)}};Z.initialize(),Z.TKHD_FLAG_ENABLED=1,Z.TKHD_FLAG_IN_MOVIE=2,Z.TKHD_FLAG_IN_PREVIEW=4,Z.TFHD_FLAG_BASE_DATA_OFFSET=1,Z.TFHD_FLAG_SAMPLE_DESC=2,Z.TFHD_FLAG_SAMPLE_DUR=8,Z.TFHD_FLAG_SAMPLE_SIZE=16,Z.TFHD_FLAG_SAMPLE_FLAGS=32,Z.TFHD_FLAG_DUR_EMPTY=65536,Z.TFHD_FLAG_DEFAULT_BASE_IS_MOOF=131072,Z.TRUN_FLAGS_DATA_OFFSET=1,Z.TRUN_FLAGS_FIRST_FLAG=4,Z.TRUN_FLAGS_DURATION=256,Z.TRUN_FLAGS_SIZE=512,Z.TRUN_FLAGS_FLAGS=1024,Z.TRUN_FLAGS_CTS_OFFSET=2048,Z.Box.prototype.add=function(l){return this.addBox(new Z[l+"Box"])},Z.Box.prototype.addBox=function(l){return this.boxes.push(l),this[l.type+"s"]?this[l.type+"s"].push(l):this[l.type]=l,l},Z.Box.prototype.set=function(l,d){return this[l]=d,this},Z.Box.prototype.addEntry=function(l,d){var c=d||"entries";return this[c]||(this[c]=[]),this[c].push(l),this},h.BoxParser=Z,Z.parseUUID=function(l){return Z.parseHex16(l)},Z.parseHex16=function(l){for(var d="",c=0;c<16;c++){var t=l.readUint8().toString(16);d+=t.length===1?"0"+t:t}return d},Z.parseOneBox=function(l,d,c){var t,a=l.getPosition(),n=0,b,s;if(l.getEndPosition()-a<8)return m.debug("BoxParser","Not enough data in stream to parse the type and size of the box"),{code:Z.ERR_NOT_ENOUGH_DATA};if(c&&c<8)return m.debug("BoxParser","Not enough bytes left in the parent box to parse a new box"),{code:Z.ERR_NOT_ENOUGH_DATA};var X=l.readUint32(),p=l.readString(4),V=p;if(m.debug("BoxParser","Found box of type '"+p+"' and size "+X+" at position "+a),n=8,p=="uuid"){if(l.getEndPosition()-l.getPosition()<16||c-n<16)return l.seek(a),m.debug("BoxParser","Not enough bytes left in the parent box to parse a UUID box"),{code:Z.ERR_NOT_ENOUGH_DATA};s=Z.parseUUID(l),n+=16,V=s}if(X==1){if(l.getEndPosition()-l.getPosition()<8||c&&c-n<8)return l.seek(a),m.warn("BoxParser",'Not enough data in stream to parse the extended size of the "'+p+'" box'),{code:Z.ERR_NOT_ENOUGH_DATA};X=l.readUint64(),n+=8}else if(X===0){if(c)X=c;else if(p!=="mdat")return m.error("BoxParser","Unlimited box size not supported for type: '"+p+"'"),t=new Z.Box(p,X),{code:Z.OK,box:t,size:t.size}}return X!==0&&X<n?(m.error("BoxParser","Box of type "+p+" has an invalid size "+X+" (too small to be a box)"),{code:Z.ERR_NOT_ENOUGH_DATA,type:p,size:X,hdr_size:n,start:a}):X!==0&&c&&X>c?(m.error("BoxParser","Box of type '"+p+"' has a size "+X+" greater than its container size "+c),{code:Z.ERR_NOT_ENOUGH_DATA,type:p,size:X,hdr_size:n,start:a}):X!==0&&a+X>l.getEndPosition()?(l.seek(a),m.info("BoxParser","Not enough data in stream to parse the entire '"+p+"' box"),{code:Z.ERR_NOT_ENOUGH_DATA,type:p,size:X,hdr_size:n,start:a}):d?{code:Z.OK,type:p,size:X,hdr_size:n,start:a}:(Z[p+"Box"]?t=new Z[p+"Box"](X):p!=="uuid"?(m.warn("BoxParser","Unknown box type: '"+p+"'"),t=new Z.Box(p,X),t.has_unparsed_data=!0):Z.UUIDBoxes[s]?t=new Z.UUIDBoxes[s](X):(m.warn("BoxParser","Unknown uuid type: '"+s+"'"),t=new Z.Box(p,X),t.uuid=s,t.has_unparsed_data=!0),t.hdr_size=n,t.start=a,t.write===Z.Box.prototype.write&&t.type!=="mdat"&&(m.info("BoxParser","'"+V+"' box writing not yet implemented, keeping unparsed data in memory for later write"),t.parseDataAndRewind(l)),t.parse(l),b=l.getPosition()-(t.start+t.size),b<0?(m.warn("BoxParser","Parsing of box '"+V+"' did not read the entire indicated box data size (missing "+-b+" bytes), seeking forward"),l.seek(t.start+t.size)):b>0&&(m.error("BoxParser","Parsing of box '"+V+"' read "+b+" more bytes than the indicated box data size, seeking backwards"),t.size!==0&&l.seek(t.start+t.size)),{code:Z.OK,box:t,size:t.size})},Z.Box.prototype.parse=function(l){this.type!="mdat"?this.data=l.readUint8Array(this.size-this.hdr_size):this.size===0?l.seek(l.getEndPosition()):l.seek(this.start+this.size)},Z.Box.prototype.parseDataAndRewind=function(l){this.data=l.readUint8Array(this.size-this.hdr_size),l.position-=this.size-this.hdr_size},Z.FullBox.prototype.parseDataAndRewind=function(l){this.parseFullHeader(l),this.data=l.readUint8Array(this.size-this.hdr_size),this.hdr_size-=4,l.position-=this.size-this.hdr_size},Z.FullBox.prototype.parseFullHeader=function(l){this.version=l.readUint8(),this.flags=l.readUint24(),this.hdr_size+=4},Z.FullBox.prototype.parse=function(l){this.parseFullHeader(l),this.data=l.readUint8Array(this.size-this.hdr_size)},Z.ContainerBox.prototype.parse=function(l){for(var d,c;l.getPosition()<this.start+this.size;)if(d=Z.parseOneBox(l,!1,this.size-(l.getPosition()-this.start)),d.code===Z.OK)if(c=d.box,this.boxes.push(c),this.subBoxNames&&this.subBoxNames.indexOf(c.type)!=-1)this[this.subBoxNames[this.subBoxNames.indexOf(c.type)]+"s"].push(c);else{var t=c.type!=="uuid"?c.type:c.uuid;this[t]?m.warn("Box of type "+t+" already stored in field of this type"):this[t]=c}else return},Z.Box.prototype.parseLanguage=function(l){this.language=l.readUint16();var d=[];d[0]=this.language>>10&31,d[1]=this.language>>5&31,d[2]=this.language&31,this.languageString=String.fromCharCode(d[0]+96,d[1]+96,d[2]+96)},Z.SAMPLE_ENTRY_TYPE_VISUAL="Visual",Z.SAMPLE_ENTRY_TYPE_AUDIO="Audio",Z.SAMPLE_ENTRY_TYPE_HINT="Hint",Z.SAMPLE_ENTRY_TYPE_METADATA="Metadata",Z.SAMPLE_ENTRY_TYPE_SUBTITLE="Subtitle",Z.SAMPLE_ENTRY_TYPE_SYSTEM="System",Z.SAMPLE_ENTRY_TYPE_TEXT="Text",Z.SampleEntry.prototype.parseHeader=function(l){l.readUint8Array(6),this.data_reference_index=l.readUint16(),this.hdr_size+=8},Z.SampleEntry.prototype.parse=function(l){this.parseHeader(l),this.data=l.readUint8Array(this.size-this.hdr_size)},Z.SampleEntry.prototype.parseDataAndRewind=function(l){this.parseHeader(l),this.data=l.readUint8Array(this.size-this.hdr_size),this.hdr_size-=8,l.position-=this.size-this.hdr_size},Z.SampleEntry.prototype.parseFooter=function(l){Z.ContainerBox.prototype.parse.call(this,l)},Z.createMediaSampleEntryCtor(Z.SAMPLE_ENTRY_TYPE_HINT),Z.createMediaSampleEntryCtor(Z.SAMPLE_ENTRY_TYPE_METADATA),Z.createMediaSampleEntryCtor(Z.SAMPLE_ENTRY_TYPE_SUBTITLE),Z.createMediaSampleEntryCtor(Z.SAMPLE_ENTRY_TYPE_SYSTEM),Z.createMediaSampleEntryCtor(Z.SAMPLE_ENTRY_TYPE_TEXT),Z.createMediaSampleEntryCtor(Z.SAMPLE_ENTRY_TYPE_VISUAL,function(l){var d;this.parseHeader(l),l.readUint16(),l.readUint16(),l.readUint32Array(3),this.width=l.readUint16(),this.height=l.readUint16(),this.horizresolution=l.readUint32(),this.vertresolution=l.readUint32(),l.readUint32(),this.frame_count=l.readUint16(),d=Math.min(31,l.readUint8()),this.compressorname=l.readString(d),d<31&&l.readString(31-d),this.depth=l.readUint16(),l.readUint16(),this.parseFooter(l)}),Z.createMediaSampleEntryCtor(Z.SAMPLE_ENTRY_TYPE_AUDIO,function(l){this.parseHeader(l),l.readUint32Array(2),this.channel_count=l.readUint16(),this.samplesize=l.readUint16(),l.readUint16(),l.readUint16(),this.samplerate=l.readUint32()/65536,this.parseFooter(l)}),Z.createSampleEntryCtor(Z.SAMPLE_ENTRY_TYPE_VISUAL,"avc1"),Z.createSampleEntryCtor(Z.SAMPLE_ENTRY_TYPE_VISUAL,"avc2"),Z.createSampleEntryCtor(Z.SAMPLE_ENTRY_TYPE_VISUAL,"avc3"),Z.createSampleEntryCtor(Z.SAMPLE_ENTRY_TYPE_VISUAL,"avc4"),Z.createSampleEntryCtor(Z.SAMPLE_ENTRY_TYPE_VISUAL,"av01"),Z.createSampleEntryCtor(Z.SAMPLE_ENTRY_TYPE_VISUAL,"dav1"),Z.createSampleEntryCtor(Z.SAMPLE_ENTRY_TYPE_VISUAL,"hvc1"),Z.createSampleEntryCtor(Z.SAMPLE_ENTRY_TYPE_VISUAL,"hev1"),Z.createSampleEntryCtor(Z.SAMPLE_ENTRY_TYPE_VISUAL,"hvt1"),Z.createSampleEntryCtor(Z.SAMPLE_ENTRY_TYPE_VISUAL,"lhe1"),Z.createSampleEntryCtor(Z.SAMPLE_ENTRY_TYPE_VISUAL,"dvh1"),Z.createSampleEntryCtor(Z.SAMPLE_ENTRY_TYPE_VISUAL,"dvhe"),Z.createSampleEntryCtor(Z.SAMPLE_ENTRY_TYPE_VISUAL,"vvc1"),Z.createSampleEntryCtor(Z.SAMPLE_ENTRY_TYPE_VISUAL,"vvi1"),Z.createSampleEntryCtor(Z.SAMPLE_ENTRY_TYPE_VISUAL,"vvs1"),Z.createSampleEntryCtor(Z.SAMPLE_ENTRY_TYPE_VISUAL,"vvcN"),Z.createSampleEntryCtor(Z.SAMPLE_ENTRY_TYPE_VISUAL,"vp08"),Z.createSampleEntryCtor(Z.SAMPLE_ENTRY_TYPE_VISUAL,"vp09"),Z.createSampleEntryCtor(Z.SAMPLE_ENTRY_TYPE_VISUAL,"avs3"),Z.createSampleEntryCtor(Z.SAMPLE_ENTRY_TYPE_VISUAL,"j2ki"),Z.createSampleEntryCtor(Z.SAMPLE_ENTRY_TYPE_VISUAL,"mjp2"),Z.createSampleEntryCtor(Z.SAMPLE_ENTRY_TYPE_VISUAL,"mjpg"),Z.createSampleEntryCtor(Z.SAMPLE_ENTRY_TYPE_VISUAL,"uncv"),Z.createSampleEntryCtor(Z.SAMPLE_ENTRY_TYPE_AUDIO,"mp4a"),Z.createSampleEntryCtor(Z.SAMPLE_ENTRY_TYPE_AUDIO,"ac-3"),Z.createSampleEntryCtor(Z.SAMPLE_ENTRY_TYPE_AUDIO,"ac-4"),Z.createSampleEntryCtor(Z.SAMPLE_ENTRY_TYPE_AUDIO,"ec-3"),Z.createSampleEntryCtor(Z.SAMPLE_ENTRY_TYPE_AUDIO,"Opus"),Z.createSampleEntryCtor(Z.SAMPLE_ENTRY_TYPE_AUDIO,"mha1"),Z.createSampleEntryCtor(Z.SAMPLE_ENTRY_TYPE_AUDIO,"mha2"),Z.createSampleEntryCtor(Z.SAMPLE_ENTRY_TYPE_AUDIO,"mhm1"),Z.createSampleEntryCtor(Z.SAMPLE_ENTRY_TYPE_AUDIO,"mhm2"),Z.createEncryptedSampleEntryCtor(Z.SAMPLE_ENTRY_TYPE_VISUAL,"encv"),Z.createEncryptedSampleEntryCtor(Z.SAMPLE_ENTRY_TYPE_AUDIO,"enca"),Z.createEncryptedSampleEntryCtor(Z.SAMPLE_ENTRY_TYPE_SUBTITLE,"encu"),Z.createEncryptedSampleEntryCtor(Z.SAMPLE_ENTRY_TYPE_SYSTEM,"encs"),Z.createEncryptedSampleEntryCtor(Z.SAMPLE_ENTRY_TYPE_TEXT,"enct"),Z.createEncryptedSampleEntryCtor(Z.SAMPLE_ENTRY_TYPE_METADATA,"encm"),Z.createBoxCtor("a1lx",function(l){var d=l.readUint8()&1,c=((d&1)+1)*16;this.layer_size=[];for(var t=0;t<3;t++)c==16?this.layer_size[t]=l.readUint16():this.layer_size[t]=l.readUint32()}),Z.createBoxCtor("a1op",function(l){this.op_index=l.readUint8()}),Z.createFullBoxCtor("auxC",function(l){this.aux_type=l.readCString();var d=this.size-this.hdr_size-(this.aux_type.length+1);this.aux_subtype=l.readUint8Array(d)}),Z.createBoxCtor("av1C",function(l){var d=l.readUint8();if(d>>7&!1){m.error("av1C marker problem");return}if(this.version=d&127,this.version!==1){m.error("av1C version "+this.version+" not supported");return}if(d=l.readUint8(),this.seq_profile=d>>5&7,this.seq_level_idx_0=d&31,d=l.readUint8(),this.seq_tier_0=d>>7&1,this.high_bitdepth=d>>6&1,this.twelve_bit=d>>5&1,this.monochrome=d>>4&1,this.chroma_subsampling_x=d>>3&1,this.chroma_subsampling_y=d>>2&1,this.chroma_sample_position=d&3,d=l.readUint8(),this.reserved_1=d>>5&7,this.reserved_1!==0){m.error("av1C reserved_1 parsing problem");return}if(this.initial_presentation_delay_present=d>>4&1,this.initial_presentation_delay_present===1)this.initial_presentation_delay_minus_one=d&15;else if(this.reserved_2=d&15,this.reserved_2!==0){m.error("av1C reserved_2 parsing problem");return}var c=this.size-this.hdr_size-4;this.configOBUs=l.readUint8Array(c)}),Z.createBoxCtor("avcC",function(l){var d,c;for(this.configurationVersion=l.readUint8(),this.AVCProfileIndication=l.readUint8(),this.profile_compatibility=l.readUint8(),this.AVCLevelIndication=l.readUint8(),this.lengthSizeMinusOne=l.readUint8()&3,this.nb_SPS_nalus=l.readUint8()&31,c=this.size-this.hdr_size-6,this.SPS=[],d=0;d<this.nb_SPS_nalus;d++)this.SPS[d]={},this.SPS[d].length=l.readUint16(),this.SPS[d].nalu=l.readUint8Array(this.SPS[d].length),c-=2+this.SPS[d].length;for(this.nb_PPS_nalus=l.readUint8(),c--,this.PPS=[],d=0;d<this.nb_PPS_nalus;d++)this.PPS[d]={},this.PPS[d].length=l.readUint16(),this.PPS[d].nalu=l.readUint8Array(this.PPS[d].length),c-=2+this.PPS[d].length;c>0&&(this.ext=l.readUint8Array(c))}),Z.createBoxCtor("btrt",function(l){this.bufferSizeDB=l.readUint32(),this.maxBitrate=l.readUint32(),this.avgBitrate=l.readUint32()}),Z.createFullBoxCtor("ccst",function(l){var d=l.readUint8();this.all_ref_pics_intra=(d&128)==128,this.intra_pred_used=(d&64)==64,this.max_ref_per_pic=(d&63)>>2,l.readUint24()}),Z.createBoxCtor("cdef",function(l){var d;for(this.channel_count=l.readUint16(),this.channel_indexes=[],this.channel_types=[],this.channel_associations=[],d=0;d<this.channel_count;d++)this.channel_indexes.push(l.readUint16()),this.channel_types.push(l.readUint16()),this.channel_associations.push(l.readUint16())}),Z.createBoxCtor("clap",function(l){this.cleanApertureWidthN=l.readUint32(),this.cleanApertureWidthD=l.readUint32(),this.cleanApertureHeightN=l.readUint32(),this.cleanApertureHeightD=l.readUint32(),this.horizOffN=l.readUint32(),this.horizOffD=l.readUint32(),this.vertOffN=l.readUint32(),this.vertOffD=l.readUint32()}),Z.createBoxCtor("clli",function(l){this.max_content_light_level=l.readUint16(),this.max_pic_average_light_level=l.readUint16()}),Z.createFullBoxCtor("cmex",function(l){this.flags&1&&(this.pos_x=l.readInt32()),this.flags&2&&(this.pos_y=l.readInt32()),this.flags&4&&(this.pos_z=l.readInt32()),this.flags&8&&(this.version==0?this.flags&16?(this.quat_x=l.readInt32(),this.quat_y=l.readInt32(),this.quat_z=l.readInt32()):(this.quat_x=l.readInt16(),this.quat_y=l.readInt16(),this.quat_z=l.readInt16()):this.version==1),this.flags&32&&(this.id=l.readUint32())}),Z.createFullBoxCtor("cmin",function(l){this.focal_length_x=l.readInt32(),this.principal_point_x=l.readInt32(),this.principal_point_y=l.readInt32(),this.flags&1&&(this.focal_length_y=l.readInt32(),this.skew_factor=l.readInt32())}),Z.createBoxCtor("cmpd",function(l){for(this.component_count=l.readUint16(),this.component_types=[],this.component_type_urls=[],i=0;i<this.component_count;i++){var d=l.readUint16();this.component_types.push(d),d>=32768&&this.component_type_urls.push(l.readCString())}}),Z.createFullBoxCtor("co64",function(l){var d,c;if(d=l.readUint32(),this.chunk_offsets=[],this.version===0)for(c=0;c<d;c++)this.chunk_offsets.push(l.readUint64())}),Z.createFullBoxCtor("CoLL",function(l){this.maxCLL=l.readUint16(),this.maxFALL=l.readUint16()}),Z.createBoxCtor("colr",function(l){if(this.colour_type=l.readString(4),this.colour_type==="nclx"){this.colour_primaries=l.readUint16(),this.transfer_characteristics=l.readUint16(),this.matrix_coefficients=l.readUint16();var d=l.readUint8();this.full_range_flag=d>>7}else this.colour_type==="rICC"?this.ICC_profile=l.readUint8Array(this.size-4):this.colour_type==="prof"&&(this.ICC_profile=l.readUint8Array(this.size-4))}),Z.createFullBoxCtor("cprt",function(l){this.parseLanguage(l),this.notice=l.readCString()}),Z.createFullBoxCtor("cslg",function(l){this.version===0&&(this.compositionToDTSShift=l.readInt32(),this.leastDecodeToDisplayDelta=l.readInt32(),this.greatestDecodeToDisplayDelta=l.readInt32(),this.compositionStartTime=l.readInt32(),this.compositionEndTime=l.readInt32())}),Z.createFullBoxCtor("ctts",function(l){var d,c;if(d=l.readUint32(),this.sample_counts=[],this.sample_offsets=[],this.version===0)for(c=0;c<d;c++){this.sample_counts.push(l.readUint32());var t=l.readInt32();t<0&&m.warn("BoxParser","ctts box uses negative values without using version 1"),this.sample_offsets.push(t)}else if(this.version==1)for(c=0;c<d;c++)this.sample_counts.push(l.readUint32()),this.sample_offsets.push(l.readInt32())}),Z.createBoxCtor("dac3",function(l){var d=l.readUint8(),c=l.readUint8(),t=l.readUint8();this.fscod=d>>6,this.bsid=d>>1&31,this.bsmod=(d&1)<<2|c>>6&3,this.acmod=c>>3&7,this.lfeon=c>>2&1,this.bit_rate_code=c&3|t>>5&7}),Z.createBoxCtor("dec3",function(l){var d=l.readUint16();this.data_rate=d>>3,this.num_ind_sub=d&7,this.ind_subs=[];for(var c=0;c<this.num_ind_sub+1;c++){var t={};this.ind_subs.push(t);var a=l.readUint8(),n=l.readUint8(),b=l.readUint8();t.fscod=a>>6,t.bsid=a>>1&31,t.bsmod=(a&1)<<4|n>>4&15,t.acmod=n>>1&7,t.lfeon=n&1,t.num_dep_sub=b>>1&15,t.num_dep_sub>0&&(t.chan_loc=(b&1)<<8|l.readUint8())}}),Z.createFullBoxCtor("dfLa",function(l){var d=127,c=128,t=[],a=["STREAMINFO","PADDING","APPLICATION","SEEKTABLE","VORBIS_COMMENT","CUESHEET","PICTURE","RESERVED"];this.parseFullHeader(l);do{var n=l.readUint8(),b=Math.min(n&d,a.length-1);if(b?l.readUint8Array(l.readUint24()):(l.readUint8Array(13),this.samplerate=l.readUint32()>>12,l.readUint8Array(20)),t.push(a[b]),n&c)break}while(!0);this.numMetadataBlocks=t.length+" ("+t.join(", ")+")"}),Z.createBoxCtor("dimm",function(l){this.bytessent=l.readUint64()}),Z.createBoxCtor("dmax",function(l){this.time=l.readUint32()}),Z.createBoxCtor("dmed",function(l){this.bytessent=l.readUint64()}),Z.createBoxCtor("dOps",function(l){if(this.Version=l.readUint8(),this.OutputChannelCount=l.readUint8(),this.PreSkip=l.readUint16(),this.InputSampleRate=l.readUint32(),this.OutputGain=l.readInt16(),this.ChannelMappingFamily=l.readUint8(),this.ChannelMappingFamily!==0){this.StreamCount=l.readUint8(),this.CoupledCount=l.readUint8(),this.ChannelMapping=[];for(var d=0;d<this.OutputChannelCount;d++)this.ChannelMapping[d]=l.readUint8()}}),Z.createFullBoxCtor("dref",function(l){var d,c;this.entries=[];for(var t=l.readUint32(),a=0;a<t;a++)if(d=Z.parseOneBox(l,!1,this.size-(l.getPosition()-this.start)),d.code===Z.OK)c=d.box,this.entries.push(c);else return}),Z.createBoxCtor("drep",function(l){this.bytessent=l.readUint64()}),Z.createFullBoxCtor("elng",function(l){this.extended_language=l.readString(this.size-this.hdr_size)}),Z.createFullBoxCtor("elst",function(l){this.entries=[];for(var d=l.readUint32(),c=0;c<d;c++){var t={};this.entries.push(t),this.version===1?(t.segment_duration=l.readUint64(),t.media_time=l.readInt64()):(t.segment_duration=l.readUint32(),t.media_time=l.readInt32()),t.media_rate_integer=l.readInt16(),t.media_rate_fraction=l.readInt16()}}),Z.createFullBoxCtor("emsg",function(l){this.version==1?(this.timescale=l.readUint32(),this.presentation_time=l.readUint64(),this.event_duration=l.readUint32(),this.id=l.readUint32(),this.scheme_id_uri=l.readCString(),this.value=l.readCString()):(this.scheme_id_uri=l.readCString(),this.value=l.readCString(),this.timescale=l.readUint32(),this.presentation_time_delta=l.readUint32(),this.event_duration=l.readUint32(),this.id=l.readUint32());var d=this.size-this.hdr_size-(4*4+(this.scheme_id_uri.length+1)+(this.value.length+1));this.version==1&&(d-=4),this.message_data=l.readUint8Array(d)}),Z.createEntityToGroupCtor=function(l,d){Z[l+"Box"]=function(c){Z.FullBox.call(this,l,c)},Z[l+"Box"].prototype=new Z.FullBox,Z[l+"Box"].prototype.parse=function(c){if(this.parseFullHeader(c),d)d.call(this,c);else for(this.group_id=c.readUint32(),this.num_entities_in_group=c.readUint32(),this.entity_ids=[],i=0;i<this.num_entities_in_group;i++){var t=c.readUint32();this.entity_ids.push(t)}}},Z.createEntityToGroupCtor("aebr"),Z.createEntityToGroupCtor("afbr"),Z.createEntityToGroupCtor("albc"),Z.createEntityToGroupCtor("altr"),Z.createEntityToGroupCtor("brst"),Z.createEntityToGroupCtor("dobr"),Z.createEntityToGroupCtor("eqiv"),Z.createEntityToGroupCtor("favc"),Z.createEntityToGroupCtor("fobr"),Z.createEntityToGroupCtor("iaug"),Z.createEntityToGroupCtor("pano"),Z.createEntityToGroupCtor("slid"),Z.createEntityToGroupCtor("ster"),Z.createEntityToGroupCtor("tsyn"),Z.createEntityToGroupCtor("wbbr"),Z.createEntityToGroupCtor("prgr"),Z.createFullBoxCtor("esds",function(l){var d=l.readUint8Array(this.size-this.hdr_size);if(this.data=d,typeof H<"u"){var c=new H;this.esd=c.parseOneDescriptor(new G(d.buffer,0,G.BIG_ENDIAN))}}),Z.createBoxCtor("fiel",function(l){this.fieldCount=l.readUint8(),this.fieldOrdering=l.readUint8()}),Z.createBoxCtor("frma",function(l){this.data_format=l.readString(4)}),Z.createBoxCtor("ftyp",function(l){var d=this.size-this.hdr_size;this.major_brand=l.readString(4),this.minor_version=l.readUint32(),d-=8,this.compatible_brands=[];for(var c=0;d>=4;)this.compatible_brands[c]=l.readString(4),d-=4,c++}),Z.createFullBoxCtor("hdlr",function(l){this.version===0&&(l.readUint32(),this.handler=l.readString(4),l.readUint32Array(3),this.name=l.readString(this.size-this.hdr_size-20),this.name[this.name.length-1]==="\0"&&(this.name=this.name.slice(0,-1)))}),Z.createBoxCtor("hvcC",function(l){var d,c,t,a;this.configurationVersion=l.readUint8(),a=l.readUint8(),this.general_profile_space=a>>6,this.general_tier_flag=(a&32)>>5,this.general_profile_idc=a&31,this.general_profile_compatibility=l.readUint32(),this.general_constraint_indicator=l.readUint8Array(6),this.general_level_idc=l.readUint8(),this.min_spatial_segmentation_idc=l.readUint16()&4095,this.parallelismType=l.readUint8()&3,this.chroma_format_idc=l.readUint8()&3,this.bit_depth_luma_minus8=l.readUint8()&7,this.bit_depth_chroma_minus8=l.readUint8()&7,this.avgFrameRate=l.readUint16(),a=l.readUint8(),this.constantFrameRate=a>>6,this.numTemporalLayers=(a&13)>>3,this.temporalIdNested=(a&4)>>2,this.lengthSizeMinusOne=a&3,this.nalu_arrays=[];var n=l.readUint8();for(d=0;d<n;d++){var b=[];this.nalu_arrays.push(b),a=l.readUint8(),b.completeness=(a&128)>>7,b.nalu_type=a&63;var s=l.readUint16();for(c=0;c<s;c++){var X={};b.push(X),t=l.readUint16(),X.data=l.readUint8Array(t)}}}),Z.createFullBoxCtor("iinf",function(l){var d;this.version===0?this.entry_count=l.readUint16():this.entry_count=l.readUint32(),this.item_infos=[];for(var c=0;c<this.entry_count;c++)if(d=Z.parseOneBox(l,!1,this.size-(l.getPosition()-this.start)),d.code===Z.OK)d.box.type!=="infe"&&m.error("BoxParser","Expected 'infe' box, got "+d.box.type),this.item_infos[c]=d.box;else return}),Z.createFullBoxCtor("iloc",function(l){var d;d=l.readUint8(),this.offset_size=d>>4&15,this.length_size=d&15,d=l.readUint8(),this.base_offset_size=d>>4&15,this.version===1||this.version===2?this.index_size=d&15:this.index_size=0,this.items=[];var c=0;if(this.version<2)c=l.readUint16();else if(this.version===2)c=l.readUint32();else throw"version of iloc box not supported";for(var t=0;t<c;t++){var a={};if(this.items.push(a),this.version<2)a.item_ID=l.readUint16();else if(this.version===2)a.item_ID=l.readUint16();else throw"version of iloc box not supported";switch(this.version===1||this.version===2?a.construction_method=l.readUint16()&15:a.construction_method=0,a.data_reference_index=l.readUint16(),this.base_offset_size){case 0:a.base_offset=0;break;case 4:a.base_offset=l.readUint32();break;case 8:a.base_offset=l.readUint64();break;default:throw"Error reading base offset size"}var n=l.readUint16();a.extents=[];for(var b=0;b<n;b++){var s={};if(a.extents.push(s),this.version===1||this.version===2)switch(this.index_size){case 0:s.extent_index=0;break;case 4:s.extent_index=l.readUint32();break;case 8:s.extent_index=l.readUint64();break;default:throw"Error reading extent index"}switch(this.offset_size){case 0:s.extent_offset=0;break;case 4:s.extent_offset=l.readUint32();break;case 8:s.extent_offset=l.readUint64();break;default:throw"Error reading extent index"}switch(this.length_size){case 0:s.extent_length=0;break;case 4:s.extent_length=l.readUint32();break;case 8:s.extent_length=l.readUint64();break;default:throw"Error reading extent index"}}}}),Z.createBoxCtor("imir",function(l){var d=l.readUint8();this.reserved=d>>7,this.axis=d&1}),Z.createFullBoxCtor("infe",function(l){if((this.version===0||this.version===1)&&(this.item_ID=l.readUint16(),this.item_protection_index=l.readUint16(),this.item_name=l.readCString(),this.content_type=l.readCString(),this.content_encoding=l.readCString()),this.version===1){this.extension_type=l.readString(4),m.warn("BoxParser","Cannot parse extension type"),l.seek(this.start+this.size);return}this.version>=2&&(this.version===2?this.item_ID=l.readUint16():this.version===3&&(this.item_ID=l.readUint32()),this.item_protection_index=l.readUint16(),this.item_type=l.readString(4),this.item_name=l.readCString(),this.item_type==="mime"?(this.content_type=l.readCString(),this.content_encoding=l.readCString()):this.item_type==="uri "&&(this.item_uri_type=l.readCString()))}),Z.createFullBoxCtor("ipma",function(l){var d,c;for(entry_count=l.readUint32(),this.associations=[],d=0;d<entry_count;d++){var t={};this.associations.push(t),this.version<1?t.id=l.readUint16():t.id=l.readUint32();var a=l.readUint8();for(t.props=[],c=0;c<a;c++){var n=l.readUint8(),b={};t.props.push(b),b.essential=(n&128)>>7===1,this.flags&1?b.property_index=(n&127)<<8|l.readUint8():b.property_index=n&127}}}),Z.createFullBoxCtor("iref",function(l){var d,c;for(this.references=[];l.getPosition()<this.start+this.size;)if(d=Z.parseOneBox(l,!0,this.size-(l.getPosition()-this.start)),d.code===Z.OK)this.version===0?c=new Z.SingleItemTypeReferenceBox(d.type,d.size,d.hdr_size,d.start):c=new Z.SingleItemTypeReferenceBoxLarge(d.type,d.size,d.hdr_size,d.start),c.write===Z.Box.prototype.write&&c.type!=="mdat"&&(m.warn("BoxParser",c.type+" box writing not yet implemented, keeping unparsed data in memory for later write"),c.parseDataAndRewind(l)),c.parse(l),this.references.push(c);else return}),Z.createBoxCtor("irot",function(l){this.angle=l.readUint8()&3}),Z.createFullBoxCtor("ispe",function(l){this.image_width=l.readUint32(),this.image_height=l.readUint32()}),Z.createFullBoxCtor("kind",function(l){this.schemeURI=l.readCString(),this.value=l.readCString()}),Z.createFullBoxCtor("leva",function(l){var d=l.readUint8();this.levels=[];for(var c=0;c<d;c++){var t={};this.levels[c]=t,t.track_ID=l.readUint32();var a=l.readUint8();switch(t.padding_flag=a>>7,t.assignment_type=a&127,t.assignment_type){case 0:t.grouping_type=l.readString(4);break;case 1:t.grouping_type=l.readString(4),t.grouping_type_parameter=l.readUint32();break;case 2:break;case 3:break;case 4:t.sub_track_id=l.readUint32();break;default:m.warn("BoxParser","Unknown leva assignement type")}}}),Z.createBoxCtor("lsel",function(l){this.layer_id=l.readUint16()}),Z.createBoxCtor("maxr",function(l){this.period=l.readUint32(),this.bytes=l.readUint32()}),Z.createBoxCtor("mdcv",function(l){this.display_primaries=[],this.display_primaries[0]={},this.display_primaries[0].x=l.readUint16(),this.display_primaries[0].y=l.readUint16(),this.display_primaries[1]={},this.display_primaries[1].x=l.readUint16(),this.display_primaries[1].y=l.readUint16(),this.display_primaries[2]={},this.display_primaries[2].x=l.readUint16(),this.display_primaries[2].y=l.readUint16(),this.white_point={},this.white_point.x=l.readUint16(),this.white_point.y=l.readUint16(),this.max_display_mastering_luminance=l.readUint32(),this.min_display_mastering_luminance=l.readUint32()}),Z.createFullBoxCtor("mdhd",function(l){this.version==1?(this.creation_time=l.readUint64(),this.modification_time=l.readUint64(),this.timescale=l.readUint32(),this.duration=l.readUint64()):(this.creation_time=l.readUint32(),this.modification_time=l.readUint32(),this.timescale=l.readUint32(),this.duration=l.readUint32()),this.parseLanguage(l),l.readUint16()}),Z.createFullBoxCtor("mehd",function(l){this.flags&1&&(m.warn("BoxParser","mehd box incorrectly uses flags set to 1, converting version to 1"),this.version=1),this.version==1?this.fragment_duration=l.readUint64():this.fragment_duration=l.readUint32()}),Z.createFullBoxCtor("meta",function(l){this.boxes=[],Z.ContainerBox.prototype.parse.call(this,l)}),Z.createFullBoxCtor("mfhd",function(l){this.sequence_number=l.readUint32()}),Z.createFullBoxCtor("mfro",function(l){this._size=l.readUint32()}),Z.createFullBoxCtor("mvhd",function(l){this.version==1?(this.creation_time=l.readUint64(),this.modification_time=l.readUint64(),this.timescale=l.readUint32(),this.duration=l.readUint64()):(this.creation_time=l.readUint32(),this.modification_time=l.readUint32(),this.timescale=l.readUint32(),this.duration=l.readUint32()),this.rate=l.readUint32(),this.volume=l.readUint16()>>8,l.readUint16(),l.readUint32Array(2),this.matrix=l.readUint32Array(9),l.readUint32Array(6),this.next_track_id=l.readUint32()}),Z.createBoxCtor("npck",function(l){this.packetssent=l.readUint32()}),Z.createBoxCtor("nump",function(l){this.packetssent=l.readUint64()}),Z.createFullBoxCtor("padb",function(l){var d=l.readUint32();this.padbits=[];for(var c=0;c<Math.floor((d+1)/2);c++)this.padbits=l.readUint8()}),Z.createBoxCtor("pasp",function(l){this.hSpacing=l.readUint32(),this.vSpacing=l.readUint32()}),Z.createBoxCtor("payl",function(l){this.text=l.readString(this.size-this.hdr_size)}),Z.createBoxCtor("payt",function(l){this.payloadID=l.readUint32();var d=l.readUint8();this.rtpmap_string=l.readString(d)}),Z.createFullBoxCtor("pdin",function(l){var d=(this.size-this.hdr_size)/8;this.rate=[],this.initial_delay=[];for(var c=0;c<d;c++)this.rate[c]=l.readUint32(),this.initial_delay[c]=l.readUint32()}),Z.createFullBoxCtor("pitm",function(l){this.version===0?this.item_id=l.readUint16():this.item_id=l.readUint32()}),Z.createFullBoxCtor("pixi",function(l){var d;for(this.num_channels=l.readUint8(),this.bits_per_channels=[],d=0;d<this.num_channels;d++)this.bits_per_channels[d]=l.readUint8()}),Z.createBoxCtor("pmax",function(l){this.bytes=l.readUint32()}),Z.createFullBoxCtor("prdi",function(l){if(this.step_count=l.readUint16(),this.item_count=[],this.flags&2)for(var d=0;d<this.step_count;d++)this.item_count[d]=l.readUint16()}),Z.createFullBoxCtor("prft",function(l){this.ref_track_id=l.readUint32(),this.ntp_timestamp=l.readUint64(),this.version===0?this.media_time=l.readUint32():this.media_time=l.readUint64()}),Z.createFullBoxCtor("pssh",function(l){if(this.system_id=Z.parseHex16(l),this.version>0){var d=l.readUint32();this.kid=[];for(var c=0;c<d;c++)this.kid[c]=Z.parseHex16(l)}var t=l.readUint32();t>0&&(this.data=l.readUint8Array(t))}),Z.createFullBoxCtor("clef",function(l){this.width=l.readUint32(),this.height=l.readUint32()}),Z.createFullBoxCtor("enof",function(l){this.width=l.readUint32(),this.height=l.readUint32()}),Z.createFullBoxCtor("prof",function(l){this.width=l.readUint32(),this.height=l.readUint32()}),Z.createContainerBoxCtor("tapt",null,["clef","prof","enof"]),Z.createBoxCtor("rtp ",function(l){this.descriptionformat=l.readString(4),this.sdptext=l.readString(this.size-this.hdr_size-4)}),Z.createFullBoxCtor("saio",function(l){this.flags&1&&(this.aux_info_type=l.readUint32(),this.aux_info_type_parameter=l.readUint32());var d=l.readUint32();this.offset=[];for(var c=0;c<d;c++)this.version===0?this.offset[c]=l.readUint32():this.offset[c]=l.readUint64()}),Z.createFullBoxCtor("saiz",function(l){this.flags&1&&(this.aux_info_type=l.readUint32(),this.aux_info_type_parameter=l.readUint32()),this.default_sample_info_size=l.readUint8();var d=l.readUint32();if(this.sample_info_size=[],this.default_sample_info_size===0)for(var c=0;c<d;c++)this.sample_info_size[c]=l.readUint8()}),Z.createSampleEntryCtor(Z.SAMPLE_ENTRY_TYPE_METADATA,"mett",function(l){this.parseHeader(l),this.content_encoding=l.readCString(),this.mime_format=l.readCString(),this.parseFooter(l)}),Z.createSampleEntryCtor(Z.SAMPLE_ENTRY_TYPE_METADATA,"metx",function(l){this.parseHeader(l),this.content_encoding=l.readCString(),this.namespace=l.readCString(),this.schema_location=l.readCString(),this.parseFooter(l)}),Z.createSampleEntryCtor(Z.SAMPLE_ENTRY_TYPE_SUBTITLE,"sbtt",function(l){this.parseHeader(l),this.content_encoding=l.readCString(),this.mime_format=l.readCString(),this.parseFooter(l)}),Z.createSampleEntryCtor(Z.SAMPLE_ENTRY_TYPE_SUBTITLE,"stpp",function(l){this.parseHeader(l),this.namespace=l.readCString(),this.schema_location=l.readCString(),this.auxiliary_mime_types=l.readCString(),this.parseFooter(l)}),Z.createSampleEntryCtor(Z.SAMPLE_ENTRY_TYPE_SUBTITLE,"stxt",function(l){this.parseHeader(l),this.content_encoding=l.readCString(),this.mime_format=l.readCString(),this.parseFooter(l)}),Z.createSampleEntryCtor(Z.SAMPLE_ENTRY_TYPE_SUBTITLE,"tx3g",function(l){this.parseHeader(l),this.displayFlags=l.readUint32(),this.horizontal_justification=l.readInt8(),this.vertical_justification=l.readInt8(),this.bg_color_rgba=l.readUint8Array(4),this.box_record=l.readInt16Array(4),this.style_record=l.readUint8Array(12),this.parseFooter(l)}),Z.createSampleEntryCtor(Z.SAMPLE_ENTRY_TYPE_METADATA,"wvtt",function(l){this.parseHeader(l),this.parseFooter(l)}),Z.createSampleGroupCtor("alst",function(l){var d,c=l.readUint16();for(this.first_output_sample=l.readUint16(),this.sample_offset=[],d=0;d<c;d++)this.sample_offset[d]=l.readUint32();var t=this.description_length-4-4*c;for(this.num_output_samples=[],this.num_total_samples=[],d=0;d<t/4;d++)this.num_output_samples[d]=l.readUint16(),this.num_total_samples[d]=l.readUint16()}),Z.createSampleGroupCtor("avll",function(l){this.layerNumber=l.readUint8(),this.accurateStatisticsFlag=l.readUint8(),this.avgBitRate=l.readUint16(),this.avgFrameRate=l.readUint16()}),Z.createSampleGroupCtor("avss",function(l){this.subSequenceIdentifier=l.readUint16(),this.layerNumber=l.readUint8();var d=l.readUint8();this.durationFlag=d>>7,this.avgRateFlag=d>>6&1,this.durationFlag&&(this.duration=l.readUint32()),this.avgRateFlag&&(this.accurateStatisticsFlag=l.readUint8(),this.avgBitRate=l.readUint16(),this.avgFrameRate=l.readUint16()),this.dependency=[];for(var c=l.readUint8(),t=0;t<c;t++){var a={};this.dependency.push(a),a.subSeqDirectionFlag=l.readUint8(),a.layerNumber=l.readUint8(),a.subSequenceIdentifier=l.readUint16()}}),Z.createSampleGroupCtor("dtrt",function(l){m.warn("BoxParser","Sample Group type: "+this.grouping_type+" not fully parsed")}),Z.createSampleGroupCtor("mvif",function(l){m.warn("BoxParser","Sample Group type: "+this.grouping_type+" not fully parsed")}),Z.createSampleGroupCtor("prol",function(l){this.roll_distance=l.readInt16()}),Z.createSampleGroupCtor("rap ",function(l){var d=l.readUint8();this.num_leading_samples_known=d>>7,this.num_leading_samples=d&127}),Z.createSampleGroupCtor("rash",function(l){if(this.operation_point_count=l.readUint16(),this.description_length!==2+(this.operation_point_count===1?2:this.operation_point_count*6)+9)m.warn("BoxParser","Mismatch in "+this.grouping_type+" sample group length"),this.data=l.readUint8Array(this.description_length-2);else{if(this.operation_point_count===1)this.target_rate_share=l.readUint16();else{this.target_rate_share=[],this.available_bitrate=[];for(var d=0;d<this.operation_point_count;d++)this.available_bitrate[d]=l.readUint32(),this.target_rate_share[d]=l.readUint16()}this.maximum_bitrate=l.readUint32(),this.minimum_bitrate=l.readUint32(),this.discard_priority=l.readUint8()}}),Z.createSampleGroupCtor("roll",function(l){this.roll_distance=l.readInt16()}),Z.SampleGroupEntry.prototype.parse=function(l){m.warn("BoxParser","Unknown Sample Group type: "+this.grouping_type),this.data=l.readUint8Array(this.description_length)},Z.createSampleGroupCtor("scif",function(l){m.warn("BoxParser","Sample Group type: "+this.grouping_type+" not fully parsed")}),Z.createSampleGroupCtor("scnm",function(l){m.warn("BoxParser","Sample Group type: "+this.grouping_type+" not fully parsed")}),Z.createSampleGroupCtor("seig",function(l){this.reserved=l.readUint8();var d=l.readUint8();this.crypt_byte_block=d>>4,this.skip_byte_block=d&15,this.isProtected=l.readUint8(),this.Per_Sample_IV_Size=l.readUint8(),this.KID=Z.parseHex16(l),this.constant_IV_size=0,this.constant_IV=0,this.isProtected===1&&this.Per_Sample_IV_Size===0&&(this.constant_IV_size=l.readUint8(),this.constant_IV=l.readUint8Array(this.constant_IV_size))}),Z.createSampleGroupCtor("stsa",function(l){m.warn("BoxParser","Sample Group type: "+this.grouping_type+" not fully parsed")}),Z.createSampleGroupCtor("sync",function(l){var d=l.readUint8();this.NAL_unit_type=d&63}),Z.createSampleGroupCtor("tele",function(l){var d=l.readUint8();this.level_independently_decodable=d>>7}),Z.createSampleGroupCtor("tsas",function(l){m.warn("BoxParser","Sample Group type: "+this.grouping_type+" not fully parsed")}),Z.createSampleGroupCtor("tscl",function(l){m.warn("BoxParser","Sample Group type: "+this.grouping_type+" not fully parsed")}),Z.createSampleGroupCtor("vipr",function(l){m.warn("BoxParser","Sample Group type: "+this.grouping_type+" not fully parsed")}),Z.createFullBoxCtor("sbgp",function(l){this.grouping_type=l.readString(4),this.version===1?this.grouping_type_parameter=l.readUint32():this.grouping_type_parameter=0,this.entries=[];for(var d=l.readUint32(),c=0;c<d;c++){var t={};this.entries.push(t),t.sample_count=l.readInt32(),t.group_description_index=l.readInt32()}}),Z.createFullBoxCtor("schm",function(l){this.scheme_type=l.readString(4),this.scheme_version=l.readUint32(),this.flags&1&&(this.scheme_uri=l.readString(this.size-this.hdr_size-8))}),Z.createBoxCtor("sdp ",function(l){this.sdptext=l.readString(this.size-this.hdr_size)}),Z.createFullBoxCtor("sdtp",function(l){var d,c=this.size-this.hdr_size;this.is_leading=[],this.sample_depends_on=[],this.sample_is_depended_on=[],this.sample_has_redundancy=[];for(var t=0;t<c;t++)d=l.readUint8(),this.is_leading[t]=d>>6,this.sample_depends_on[t]=d>>4&3,this.sample_is_depended_on[t]=d>>2&3,this.sample_has_redundancy[t]=d&3}),Z.createFullBoxCtor("senc"),Z.createFullBoxCtor("sgpd",function(l){this.grouping_type=l.readString(4),m.debug("BoxParser","Found Sample Groups of type "+this.grouping_type),this.version===1?this.default_length=l.readUint32():this.default_length=0,this.version>=2&&(this.default_group_description_index=l.readUint32()),this.entries=[];for(var d=l.readUint32(),c=0;c<d;c++){var t;Z[this.grouping_type+"SampleGroupEntry"]?t=new Z[this.grouping_type+"SampleGroupEntry"](this.grouping_type):t=new Z.SampleGroupEntry(this.grouping_type),this.entries.push(t),this.version===1?this.default_length===0?t.description_length=l.readUint32():t.description_length=this.default_length:t.description_length=this.default_length,t.write===Z.SampleGroupEntry.prototype.write&&(m.info("BoxParser","SampleGroup for type "+this.grouping_type+" writing not yet implemented, keeping unparsed data in memory for later write"),t.data=l.readUint8Array(t.description_length),l.position-=t.description_length),t.parse(l)}}),Z.createFullBoxCtor("sidx",function(l){this.reference_ID=l.readUint32(),this.timescale=l.readUint32(),this.version===0?(this.earliest_presentation_time=l.readUint32(),this.first_offset=l.readUint32()):(this.earliest_presentation_time=l.readUint64(),this.first_offset=l.readUint64()),l.readUint16(),this.references=[];for(var d=l.readUint16(),c=0;c<d;c++){var t={};this.references.push(t);var a=l.readUint32();t.reference_type=a>>31&1,t.referenced_size=a&2147483647,t.subsegment_duration=l.readUint32(),a=l.readUint32(),t.starts_with_SAP=a>>31&1,t.SAP_type=a>>28&7,t.SAP_delta_time=a&268435455}}),Z.SingleItemTypeReferenceBox=function(l,d,c,t){Z.Box.call(this,l,d),this.hdr_size=c,this.start=t},Z.SingleItemTypeReferenceBox.prototype=new Z.Box,Z.SingleItemTypeReferenceBox.prototype.parse=function(l){this.from_item_ID=l.readUint16();var d=l.readUint16();this.references=[];for(var c=0;c<d;c++)this.references[c]={},this.references[c].to_item_ID=l.readUint16()},Z.SingleItemTypeReferenceBoxLarge=function(l,d,c,t){Z.Box.call(this,l,d),this.hdr_size=c,this.start=t},Z.SingleItemTypeReferenceBoxLarge.prototype=new Z.Box,Z.SingleItemTypeReferenceBoxLarge.prototype.parse=function(l){this.from_item_ID=l.readUint32();var d=l.readUint16();this.references=[];for(var c=0;c<d;c++)this.references[c]={},this.references[c].to_item_ID=l.readUint32()},Z.createFullBoxCtor("SmDm",function(l){this.primaryRChromaticity_x=l.readUint16(),this.primaryRChromaticity_y=l.readUint16(),this.primaryGChromaticity_x=l.readUint16(),this.primaryGChromaticity_y=l.readUint16(),this.primaryBChromaticity_x=l.readUint16(),this.primaryBChromaticity_y=l.readUint16(),this.whitePointChromaticity_x=l.readUint16(),this.whitePointChromaticity_y=l.readUint16(),this.luminanceMax=l.readUint32(),this.luminanceMin=l.readUint32()}),Z.createFullBoxCtor("smhd",function(l){this.balance=l.readUint16(),l.readUint16()}),Z.createFullBoxCtor("ssix",function(l){this.subsegments=[];for(var d=l.readUint32(),c=0;c<d;c++){var t={};this.subsegments.push(t),t.ranges=[];for(var a=l.readUint32(),n=0;n<a;n++){var b={};t.ranges.push(b),b.level=l.readUint8(),b.range_size=l.readUint24()}}}),Z.createFullBoxCtor("stco",function(l){var d;if(d=l.readUint32(),this.chunk_offsets=[],this.version===0)for(var c=0;c<d;c++)this.chunk_offsets.push(l.readUint32())}),Z.createFullBoxCtor("stdp",function(l){var d=(this.size-this.hdr_size)/2;this.priority=[];for(var c=0;c<d;c++)this.priority[c]=l.readUint16()}),Z.createFullBoxCtor("sthd"),Z.createFullBoxCtor("stri",function(l){this.switch_group=l.readUint16(),this.alternate_group=l.readUint16(),this.sub_track_id=l.readUint32();var d=(this.size-this.hdr_size-8)/4;this.attribute_list=[];for(var c=0;c<d;c++)this.attribute_list[c]=l.readUint32()}),Z.createFullBoxCtor("stsc",function(l){var d,c;if(d=l.readUint32(),this.first_chunk=[],this.samples_per_chunk=[],this.sample_description_index=[],this.version===0)for(c=0;c<d;c++)this.first_chunk.push(l.readUint32()),this.samples_per_chunk.push(l.readUint32()),this.sample_description_index.push(l.readUint32())}),Z.createFullBoxCtor("stsd",function(l){var d,c,t,a;for(this.entries=[],t=l.readUint32(),d=1;d<=t;d++)if(c=Z.parseOneBox(l,!0,this.size-(l.getPosition()-this.start)),c.code===Z.OK)Z[c.type+"SampleEntry"]?(a=new Z[c.type+"SampleEntry"](c.size),a.hdr_size=c.hdr_size,a.start=c.start):(m.warn("BoxParser","Unknown sample entry type: "+c.type),a=new Z.SampleEntry(c.type,c.size,c.hdr_size,c.start)),a.write===Z.SampleEntry.prototype.write&&(m.info("BoxParser","SampleEntry "+a.type+" box writing not yet implemented, keeping unparsed data in memory for later write"),a.parseDataAndRewind(l)),a.parse(l),this.entries.push(a);else return}),Z.createFullBoxCtor("stsg",function(l){this.grouping_type=l.readUint32();var d=l.readUint16();this.group_description_index=[];for(var c=0;c<d;c++)this.group_description_index[c]=l.readUint32()}),Z.createFullBoxCtor("stsh",function(l){var d,c;if(d=l.readUint32(),this.shadowed_sample_numbers=[],this.sync_sample_numbers=[],this.version===0)for(c=0;c<d;c++)this.shadowed_sample_numbers.push(l.readUint32()),this.sync_sample_numbers.push(l.readUint32())}),Z.createFullBoxCtor("stss",function(l){var d,c;if(c=l.readUint32(),this.version===0)for(this.sample_numbers=[],d=0;d<c;d++)this.sample_numbers.push(l.readUint32())}),Z.createFullBoxCtor("stsz",function(l){var d;if(this.sample_sizes=[],this.version===0)for(this.sample_size=l.readUint32(),this.sample_count=l.readUint32(),d=0;d<this.sample_count;d++)this.sample_size===0?this.sample_sizes.push(l.readUint32()):this.sample_sizes[d]=this.sample_size}),Z.createFullBoxCtor("stts",function(l){var d,c,t;if(d=l.readUint32(),this.sample_counts=[],this.sample_deltas=[],this.version===0)for(c=0;c<d;c++)this.sample_counts.push(l.readUint32()),t=l.readInt32(),t<0&&(m.warn("BoxParser","File uses negative stts sample delta, using value 1 instead, sync may be lost!"),t=1),this.sample_deltas.push(t)}),Z.createFullBoxCtor("stvi",function(l){var d=l.readUint32();this.single_view_allowed=d&3,this.stereo_scheme=l.readUint32();var c=l.readUint32();this.stereo_indication_type=l.readString(c);var t,a;for(this.boxes=[];l.getPosition()<this.start+this.size;)if(t=Z.parseOneBox(l,!1,this.size-(l.getPosition()-this.start)),t.code===Z.OK)a=t.box,this.boxes.push(a),this[a.type]=a;else return}),Z.createBoxCtor("styp",function(l){Z.ftypBox.prototype.parse.call(this,l)}),Z.createFullBoxCtor("stz2",function(l){var d,c;if(this.sample_sizes=[],this.version===0)if(this.reserved=l.readUint24(),this.field_size=l.readUint8(),c=l.readUint32(),this.field_size===4)for(d=0;d<c;d+=2){var t=l.readUint8();this.sample_sizes[d]=t>>4&15,this.sample_sizes[d+1]=t&15}else if(this.field_size===8)for(d=0;d<c;d++)this.sample_sizes[d]=l.readUint8();else if(this.field_size===16)for(d=0;d<c;d++)this.sample_sizes[d]=l.readUint16();else m.error("BoxParser","Error in length field in stz2 box")}),Z.createFullBoxCtor("subs",function(l){var d,c,t,a;for(t=l.readUint32(),this.entries=[],d=0;d<t;d++){var n={};if(this.entries[d]=n,n.sample_delta=l.readUint32(),n.subsamples=[],a=l.readUint16(),a>0)for(c=0;c<a;c++){var b={};n.subsamples.push(b),this.version==1?b.size=l.readUint32():b.size=l.readUint16(),b.priority=l.readUint8(),b.discardable=l.readUint8(),b.codec_specific_parameters=l.readUint32()}}}),Z.createFullBoxCtor("tenc",function(l){if(l.readUint8(),this.version===0)l.readUint8();else{var d=l.readUint8();this.default_crypt_byte_block=d>>4&15,this.default_skip_byte_block=d&15}this.default_isProtected=l.readUint8(),this.default_Per_Sample_IV_Size=l.readUint8(),this.default_KID=Z.parseHex16(l),this.default_isProtected===1&&this.default_Per_Sample_IV_Size===0&&(this.default_constant_IV_size=l.readUint8(),this.default_constant_IV=l.readUint8Array(this.default_constant_IV_size))}),Z.createFullBoxCtor("tfdt",function(l){this.version==1?this.baseMediaDecodeTime=l.readUint64():this.baseMediaDecodeTime=l.readUint32()}),Z.createFullBoxCtor("tfhd",function(l){var d=0;this.track_id=l.readUint32(),this.size-this.hdr_size>d&&this.flags&Z.TFHD_FLAG_BASE_DATA_OFFSET?(this.base_data_offset=l.readUint64(),d+=8):this.base_data_offset=0,this.size-this.hdr_size>d&&this.flags&Z.TFHD_FLAG_SAMPLE_DESC?(this.default_sample_description_index=l.readUint32(),d+=4):this.default_sample_description_index=0,this.size-this.hdr_size>d&&this.flags&Z.TFHD_FLAG_SAMPLE_DUR?(this.default_sample_duration=l.readUint32(),d+=4):this.default_sample_duration=0,this.size-this.hdr_size>d&&this.flags&Z.TFHD_FLAG_SAMPLE_SIZE?(this.default_sample_size=l.readUint32(),d+=4):this.default_sample_size=0,this.size-this.hdr_size>d&&this.flags&Z.TFHD_FLAG_SAMPLE_FLAGS?(this.default_sample_flags=l.readUint32(),d+=4):this.default_sample_flags=0}),Z.createFullBoxCtor("tfra",function(l){this.track_ID=l.readUint32(),l.readUint24();var d=l.readUint8();this.length_size_of_traf_num=d>>4&3,this.length_size_of_trun_num=d>>2&3,this.length_size_of_sample_num=d&3,this.entries=[];for(var c=l.readUint32(),t=0;t<c;t++)this.version===1?(this.time=l.readUint64(),this.moof_offset=l.readUint64()):(this.time=l.readUint32(),this.moof_offset=l.readUint32()),this.traf_number=l["readUint"+8*(this.length_size_of_traf_num+1)](),this.trun_number=l["readUint"+8*(this.length_size_of_trun_num+1)](),this.sample_number=l["readUint"+8*(this.length_size_of_sample_num+1)]()}),Z.createFullBoxCtor("tkhd",function(l){this.version==1?(this.creation_time=l.readUint64(),this.modification_time=l.readUint64(),this.track_id=l.readUint32(),l.readUint32(),this.duration=l.readUint64()):(this.creation_time=l.readUint32(),this.modification_time=l.readUint32(),this.track_id=l.readUint32(),l.readUint32(),this.duration=l.readUint32()),l.readUint32Array(2),this.layer=l.readInt16(),this.alternate_group=l.readInt16(),this.volume=l.readInt16()>>8,l.readUint16(),this.matrix=l.readInt32Array(9),this.width=l.readUint32(),this.height=l.readUint32()}),Z.createBoxCtor("tmax",function(l){this.time=l.readUint32()}),Z.createBoxCtor("tmin",function(l){this.time=l.readUint32()}),Z.createBoxCtor("totl",function(l){this.bytessent=l.readUint32()}),Z.createBoxCtor("tpay",function(l){this.bytessent=l.readUint32()}),Z.createBoxCtor("tpyl",function(l){this.bytessent=l.readUint64()}),Z.TrackGroupTypeBox.prototype.parse=function(l){this.parseFullHeader(l),this.track_group_id=l.readUint32()},Z.createTrackGroupCtor("msrc"),Z.TrackReferenceTypeBox=function(l,d,c,t){Z.Box.call(this,l,d),this.hdr_size=c,this.start=t},Z.TrackReferenceTypeBox.prototype=new Z.Box,Z.TrackReferenceTypeBox.prototype.parse=function(l){this.track_ids=l.readUint32Array((this.size-this.hdr_size)/4)},Z.trefBox.prototype.parse=function(l){for(var d,c;l.getPosition()<this.start+this.size;)if(d=Z.parseOneBox(l,!0,this.size-(l.getPosition()-this.start)),d.code===Z.OK)c=new Z.TrackReferenceTypeBox(d.type,d.size,d.hdr_size,d.start),c.write===Z.Box.prototype.write&&c.type!=="mdat"&&(m.info("BoxParser","TrackReference "+c.type+" box writing not yet implemented, keeping unparsed data in memory for later write"),c.parseDataAndRewind(l)),c.parse(l),this.boxes.push(c);else return},Z.createFullBoxCtor("trep",function(l){for(this.track_ID=l.readUint32(),this.boxes=[];l.getPosition()<this.start+this.size;)if(ret=Z.parseOneBox(l,!1,this.size-(l.getPosition()-this.start)),ret.code===Z.OK)box=ret.box,this.boxes.push(box);else return}),Z.createFullBoxCtor("trex",function(l){this.track_id=l.readUint32(),this.default_sample_description_index=l.readUint32(),this.default_sample_duration=l.readUint32(),this.default_sample_size=l.readUint32(),this.default_sample_flags=l.readUint32()}),Z.createBoxCtor("trpy",function(l){this.bytessent=l.readUint64()}),Z.createFullBoxCtor("trun",function(l){var d=0;if(this.sample_count=l.readUint32(),d+=4,this.size-this.hdr_size>d&&this.flags&Z.TRUN_FLAGS_DATA_OFFSET?(this.data_offset=l.readInt32(),d+=4):this.data_offset=0,this.size-this.hdr_size>d&&this.flags&Z.TRUN_FLAGS_FIRST_FLAG?(this.first_sample_flags=l.readUint32(),d+=4):this.first_sample_flags=0,this.sample_duration=[],this.sample_size=[],this.sample_flags=[],this.sample_composition_time_offset=[],this.size-this.hdr_size>d)for(var c=0;c<this.sample_count;c++)this.flags&Z.TRUN_FLAGS_DURATION&&(this.sample_duration[c]=l.readUint32()),this.flags&Z.TRUN_FLAGS_SIZE&&(this.sample_size[c]=l.readUint32()),this.flags&Z.TRUN_FLAGS_FLAGS&&(this.sample_flags[c]=l.readUint32()),this.flags&Z.TRUN_FLAGS_CTS_OFFSET&&(this.version===0?this.sample_composition_time_offset[c]=l.readUint32():this.sample_composition_time_offset[c]=l.readInt32())}),Z.createFullBoxCtor("tsel",function(l){this.switch_group=l.readUint32();var d=(this.size-this.hdr_size-4)/4;this.attribute_list=[];for(var c=0;c<d;c++)this.attribute_list[c]=l.readUint32()}),Z.createFullBoxCtor("txtC",function(l){this.config=l.readCString()}),Z.createBoxCtor("tyco",function(l){var d=(this.size-this.hdr_size)/4;this.compatible_brands=[];for(var c=0;c<d;c++)this.compatible_brands[c]=l.readString(4)}),Z.createFullBoxCtor("udes",function(l){this.lang=l.readCString(),this.name=l.readCString(),this.description=l.readCString(),this.tags=l.readCString()}),Z.createFullBoxCtor("uncC",function(l){var d;for(this.profile=l.readUint32(),this.component_count=l.readUint16(),this.component_index=[],this.component_bit_depth_minus_one=[],this.component_format=[],this.component_align_size=[],d=0;d<this.component_count;d++)this.component_index.push(l.readUint16()),this.component_bit_depth_minus_one.push(l.readUint8()),this.component_format.push(l.readUint8()),this.component_align_size.push(l.readUint8());this.sampling_type=l.readUint8(),this.interleave_type=l.readUint8(),this.block_size=l.readUint8();var c=l.readUint8();this.component_little_endian=c>>7&1,this.block_pad_lsb=c>>6&1,this.block_little_endian=c>>5&1,this.block_reversed=c>>4&1,this.pad_unknown=c>>3&1,this.pixel_size=l.readUint8(),this.row_align_size=l.readUint32(),this.tile_align_size=l.readUint32(),this.num_tile_cols_minus_one=l.readUint32(),this.num_tile_rows_minus_one=l.readUint32()}),Z.createFullBoxCtor("url ",function(l){this.flags!==1&&(this.location=l.readCString())}),Z.createFullBoxCtor("urn ",function(l){this.name=l.readCString(),this.size-this.hdr_size-this.name.length-1>0&&(this.location=l.readCString())}),Z.createUUIDBox("a5d40b30e81411ddba2f0800200c9a66",!0,!1,function(l){this.LiveServerManifest=l.readString(this.size-this.hdr_size).replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;").replace(/'/g,"&#039;")}),Z.createUUIDBox("d08a4f1810f34a82b6c832d8aba183d3",!0,!1,function(l){this.system_id=Z.parseHex16(l);var d=l.readUint32();d>0&&(this.data=l.readUint8Array(d))}),Z.createUUIDBox("a2394f525a9b4f14a2446c427c648df4",!0,!1),Z.createUUIDBox("8974dbce7be74c5184f97148f9882554",!0,!1,function(l){this.default_AlgorithmID=l.readUint24(),this.default_IV_size=l.readUint8(),this.default_KID=Z.parseHex16(l)}),Z.createUUIDBox("d4807ef2ca3946958e5426cb9e46a79f",!0,!1,function(l){this.fragment_count=l.readUint8(),this.entries=[];for(var d=0;d<this.fragment_count;d++){var c={},t=0,a=0;this.version===1?(t=l.readUint64(),a=l.readUint64()):(t=l.readUint32(),a=l.readUint32()),c.absolute_time=t,c.absolute_duration=a,this.entries.push(c)}}),Z.createUUIDBox("6d1d9b0542d544e680e2141daff757b2",!0,!1,function(l){this.version===1?(this.absolute_time=l.readUint64(),this.duration=l.readUint64()):(this.absolute_time=l.readUint32(),this.duration=l.readUint32())}),Z.createFullBoxCtor("vmhd",function(l){this.graphicsmode=l.readUint16(),this.opcolor=l.readUint16Array(3)}),Z.createFullBoxCtor("vpcC",function(l){var d;this.version===1?(this.profile=l.readUint8(),this.level=l.readUint8(),d=l.readUint8(),this.bitDepth=d>>4,this.chromaSubsampling=d>>1&7,this.videoFullRangeFlag=d&1,this.colourPrimaries=l.readUint8(),this.transferCharacteristics=l.readUint8(),this.matrixCoefficients=l.readUint8(),this.codecIntializationDataSize=l.readUint16(),this.codecIntializationData=l.readUint8Array(this.codecIntializationDataSize)):(this.profile=l.readUint8(),this.level=l.readUint8(),d=l.readUint8(),this.bitDepth=d>>4&15,this.colorSpace=d&15,d=l.readUint8(),this.chromaSubsampling=d>>4&15,this.transferFunction=d>>1&7,this.videoFullRangeFlag=d&1,this.codecIntializationDataSize=l.readUint16(),this.codecIntializationData=l.readUint8Array(this.codecIntializationDataSize))}),Z.createBoxCtor("vttC",function(l){this.text=l.readString(this.size-this.hdr_size)}),Z.createFullBoxCtor("vvcC",function(l){var d,c,t={held_bits:void 0,num_held_bits:0,stream_read_1_bytes:function(W){this.held_bits=W.readUint8(),this.num_held_bits=8},stream_read_2_bytes:function(W){this.held_bits=W.readUint16(),this.num_held_bits=16},extract_bits:function(W){var J=this.held_bits>>this.num_held_bits-W&(1<<W)-1;return this.num_held_bits-=W,J}};if(t.stream_read_1_bytes(l),t.extract_bits(5),this.lengthSizeMinusOne=t.extract_bits(2),this.ptl_present_flag=t.extract_bits(1),this.ptl_present_flag){t.stream_read_2_bytes(l),this.ols_idx=t.extract_bits(9),this.num_sublayers=t.extract_bits(3),this.constant_frame_rate=t.extract_bits(2),this.chroma_format_idc=t.extract_bits(2),t.stream_read_1_bytes(l),this.bit_depth_minus8=t.extract_bits(3),t.extract_bits(5);{if(t.stream_read_2_bytes(l),t.extract_bits(2),this.num_bytes_constraint_info=t.extract_bits(6),this.general_profile_idc=t.extract_bits(7),this.general_tier_flag=t.extract_bits(1),this.general_level_idc=l.readUint8(),t.stream_read_1_bytes(l),this.ptl_frame_only_constraint_flag=t.extract_bits(1),this.ptl_multilayer_enabled_flag=t.extract_bits(1),this.general_constraint_info=new Uint8Array(this.num_bytes_constraint_info),this.num_bytes_constraint_info){for(d=0;d<this.num_bytes_constraint_info-1;d++){var a=t.extract_bits(6);t.stream_read_1_bytes(l);var n=t.extract_bits(2);this.general_constraint_info[d]=a<<2|n}this.general_constraint_info[this.num_bytes_constraint_info-1]=t.extract_bits(6)}else t.extract_bits(6);if(this.num_sublayers>1){for(t.stream_read_1_bytes(l),this.ptl_sublayer_present_mask=0,c=this.num_sublayers-2;c>=0;--c){var b=t.extract_bits(1);this.ptl_sublayer_present_mask|=b<<c}for(c=this.num_sublayers;c<=8&&this.num_sublayers>1;++c)t.extract_bits(1);for(this.sublayer_level_idc=[],c=this.num_sublayers-2;c>=0;--c)this.ptl_sublayer_present_mask&1<<c&&(this.sublayer_level_idc[c]=l.readUint8())}if(this.ptl_num_sub_profiles=l.readUint8(),this.general_sub_profile_idc=[],this.ptl_num_sub_profiles)for(d=0;d<this.ptl_num_sub_profiles;d++)this.general_sub_profile_idc.push(l.readUint32())}this.max_picture_width=l.readUint16(),this.max_picture_height=l.readUint16(),this.avg_frame_rate=l.readUint16()}var s=12,X=13;this.nalu_arrays=[];var p=l.readUint8();for(d=0;d<p;d++){var V=[];this.nalu_arrays.push(V),t.stream_read_1_bytes(l),V.completeness=t.extract_bits(1),t.extract_bits(2),V.nalu_type=t.extract_bits(5);var y=1;for(V.nalu_type!=X&&V.nalu_type!=s&&(y=l.readUint16()),c=0;c<y;c++){var r=l.readUint16();V.push({data:l.readUint8Array(r),length:r})}}}),Z.createFullBoxCtor("vvnC",function(l){var d=strm.readUint8();this.lengthSizeMinusOne=d&3}),Z.SampleEntry.prototype.isVideo=function(){return!1},Z.SampleEntry.prototype.isAudio=function(){return!1},Z.SampleEntry.prototype.isSubtitle=function(){return!1},Z.SampleEntry.prototype.isMetadata=function(){return!1},Z.SampleEntry.prototype.isHint=function(){return!1},Z.SampleEntry.prototype.getCodec=function(){return this.type.replace(".","")},Z.SampleEntry.prototype.getWidth=function(){return""},Z.SampleEntry.prototype.getHeight=function(){return""},Z.SampleEntry.prototype.getChannelCount=function(){return""},Z.SampleEntry.prototype.getSampleRate=function(){return""},Z.SampleEntry.prototype.getSampleSize=function(){return""},Z.VisualSampleEntry.prototype.isVideo=function(){return!0},Z.VisualSampleEntry.prototype.getWidth=function(){return this.width},Z.VisualSampleEntry.prototype.getHeight=function(){return this.height},Z.AudioSampleEntry.prototype.isAudio=function(){return!0},Z.AudioSampleEntry.prototype.getChannelCount=function(){return this.channel_count},Z.AudioSampleEntry.prototype.getSampleRate=function(){return this.samplerate},Z.AudioSampleEntry.prototype.getSampleSize=function(){return this.samplesize},Z.SubtitleSampleEntry.prototype.isSubtitle=function(){return!0},Z.MetadataSampleEntry.prototype.isMetadata=function(){return!0},Z.decimalToHex=function(l,d){var c=Number(l).toString(16);for(d=typeof d>"u"||d===null?d=2:d;c.length<d;)c="0"+c;return c},Z.avc1SampleEntry.prototype.getCodec=Z.avc2SampleEntry.prototype.getCodec=Z.avc3SampleEntry.prototype.getCodec=Z.avc4SampleEntry.prototype.getCodec=function(){var l=Z.SampleEntry.prototype.getCodec.call(this);return this.avcC?l+"."+Z.decimalToHex(this.avcC.AVCProfileIndication)+Z.decimalToHex(this.avcC.profile_compatibility)+Z.decimalToHex(this.avcC.AVCLevelIndication):l},Z.hev1SampleEntry.prototype.getCodec=Z.hvc1SampleEntry.prototype.getCodec=function(){var l,d=Z.SampleEntry.prototype.getCodec.call(this);if(this.hvcC){switch(d+=".",this.hvcC.general_profile_space){case 0:d+="";break;case 1:d+="A";break;case 2:d+="B";break;case 3:d+="C";break}d+=this.hvcC.general_profile_idc,d+=".";var c=this.hvcC.general_profile_compatibility,t=0;for(l=0;l<32&&(t|=c&1,l!=31);l++)t<<=1,c>>=1;d+=Z.decimalToHex(t,0),d+=".",this.hvcC.general_tier_flag===0?d+="L":d+="H",d+=this.hvcC.general_level_idc;var a=!1,n="";for(l=5;l>=0;l--)(this.hvcC.general_constraint_indicator[l]||a)&&(n="."+Z.decimalToHex(this.hvcC.general_constraint_indicator[l],0)+n,a=!0);d+=n}return d},Z.vvc1SampleEntry.prototype.getCodec=Z.vvi1SampleEntry.prototype.getCodec=function(){var l,d=Z.SampleEntry.prototype.getCodec.call(this);if(this.vvcC){d+="."+this.vvcC.general_profile_idc,this.vvcC.general_tier_flag?d+=".H":d+=".L",d+=this.vvcC.general_level_idc;var c="";if(this.vvcC.general_constraint_info){var t=[],a=0;a|=this.vvcC.ptl_frame_only_constraint<<7,a|=this.vvcC.ptl_multilayer_enabled<<6;var n;for(l=0;l<this.vvcC.general_constraint_info.length;++l)a|=this.vvcC.general_constraint_info[l]>>2&63,t.push(a),a&&(n=l),a=this.vvcC.general_constraint_info[l]>>2&3;if(n===void 0)c=".CA";else{c=".C";var b="ABCDEFGHIJKLMNOPQRSTUVWXYZ234567",s=0,X=0;for(l=0;l<=n;++l)for(s=s<<8|t[l],X+=8;X>=5;){var p=s>>X-5&31;c+=b[p],X-=5,s&=(1<<X)-1}X&&(s<<=5-X,c+=b[s&31])}}d+=c}return d},Z.mp4aSampleEntry.prototype.getCodec=function(){var l=Z.SampleEntry.prototype.getCodec.call(this);if(this.esds&&this.esds.esd){var d=this.esds.esd.getOTI(),c=this.esds.esd.getAudioConfig();return l+"."+Z.decimalToHex(d)+(c?"."+c:"")}else return l},Z.stxtSampleEntry.prototype.getCodec=function(){var l=Z.SampleEntry.prototype.getCodec.call(this);return this.mime_format?l+"."+this.mime_format:l},Z.vp08SampleEntry.prototype.getCodec=Z.vp09SampleEntry.prototype.getCodec=function(){var l=Z.SampleEntry.prototype.getCodec.call(this),d=this.vpcC.level;d==0&&(d="00");var c=this.vpcC.bitDepth;return c==8&&(c="08"),l+".0"+this.vpcC.profile+"."+d+"."+c},Z.av01SampleEntry.prototype.getCodec=function(){var l=Z.SampleEntry.prototype.getCodec.call(this),d=this.av1C.seq_level_idx_0;d<10&&(d="0"+d);var c;return this.av1C.seq_profile===2&&this.av1C.high_bitdepth===1?c=this.av1C.twelve_bit===1?"12":"10":this.av1C.seq_profile<=2&&(c=this.av1C.high_bitdepth===1?"10":"08"),l+"."+this.av1C.seq_profile+"."+d+(this.av1C.seq_tier_0?"H":"M")+"."+c},Z.Box.prototype.writeHeader=function(l,d){this.size+=8,this.size>R&&(this.size+=8),this.type==="uuid"&&(this.size+=16),m.debug("BoxWriter","Writing box "+this.type+" of size: "+this.size+" at position "+l.getPosition()+(d||"")),this.size>R?l.writeUint32(1):(this.sizePosition=l.getPosition(),l.writeUint32(this.size)),l.writeString(this.type,null,4),this.type==="uuid"&&l.writeUint8Array(this.uuid),this.size>R&&l.writeUint64(this.size)},Z.FullBox.prototype.writeHeader=function(l){this.size+=4,Z.Box.prototype.writeHeader.call(this,l," v="+this.version+" f="+this.flags),l.writeUint8(this.version),l.writeUint24(this.flags)},Z.Box.prototype.write=function(l){this.type==="mdat"?this.data&&(this.size=this.data.length,this.writeHeader(l),l.writeUint8Array(this.data)):(this.size=this.data?this.data.length:0,this.writeHeader(l),this.data&&l.writeUint8Array(this.data))},Z.ContainerBox.prototype.write=function(l){this.size=0,this.writeHeader(l);for(var d=0;d<this.boxes.length;d++)this.boxes[d]&&(this.boxes[d].write(l),this.size+=this.boxes[d].size);m.debug("BoxWriter","Adjusting box "+this.type+" with new size "+this.size),l.adjustUint32(this.sizePosition,this.size)},Z.TrackReferenceTypeBox.prototype.write=function(l){this.size=this.track_ids.length*4,this.writeHeader(l),l.writeUint32Array(this.track_ids)},Z.avcCBox.prototype.write=function(l){var d;for(this.size=7,d=0;d<this.SPS.length;d++)this.size+=2+this.SPS[d].length;for(d=0;d<this.PPS.length;d++)this.size+=2+this.PPS[d].length;for(this.ext&&(this.size+=this.ext.length),this.writeHeader(l),l.writeUint8(this.configurationVersion),l.writeUint8(this.AVCProfileIndication),l.writeUint8(this.profile_compatibility),l.writeUint8(this.AVCLevelIndication),l.writeUint8(this.lengthSizeMinusOne+252),l.writeUint8(this.SPS.length+224),d=0;d<this.SPS.length;d++)l.writeUint16(this.SPS[d].length),l.writeUint8Array(this.SPS[d].nalu);for(l.writeUint8(this.PPS.length),d=0;d<this.PPS.length;d++)l.writeUint16(this.PPS[d].length),l.writeUint8Array(this.PPS[d].nalu);this.ext&&l.writeUint8Array(this.ext)},Z.co64Box.prototype.write=function(l){var d;for(this.version=0,this.flags=0,this.size=4+8*this.chunk_offsets.length,this.writeHeader(l),l.writeUint32(this.chunk_offsets.length),d=0;d<this.chunk_offsets.length;d++)l.writeUint64(this.chunk_offsets[d])},Z.cslgBox.prototype.write=function(l){this.version=0,this.flags=0,this.size=4*5,this.writeHeader(l),l.writeInt32(this.compositionToDTSShift),l.writeInt32(this.leastDecodeToDisplayDelta),l.writeInt32(this.greatestDecodeToDisplayDelta),l.writeInt32(this.compositionStartTime),l.writeInt32(this.compositionEndTime)},Z.cttsBox.prototype.write=function(l){var d;for(this.version=0,this.flags=0,this.size=4+8*this.sample_counts.length,this.writeHeader(l),l.writeUint32(this.sample_counts.length),d=0;d<this.sample_counts.length;d++)l.writeUint32(this.sample_counts[d]),this.version===1?l.writeInt32(this.sample_offsets[d]):l.writeUint32(this.sample_offsets[d])},Z.drefBox.prototype.write=function(l){this.version=0,this.flags=0,this.size=4,this.writeHeader(l),l.writeUint32(this.entries.length);for(var d=0;d<this.entries.length;d++)this.entries[d].write(l),this.size+=this.entries[d].size;m.debug("BoxWriter","Adjusting box "+this.type+" with new size "+this.size),l.adjustUint32(this.sizePosition,this.size)},Z.elngBox.prototype.write=function(l){this.version=0,this.flags=0,this.size=this.extended_language.length,this.writeHeader(l),l.writeString(this.extended_language)},Z.elstBox.prototype.write=function(l){this.version=0,this.flags=0,this.size=4+12*this.entries.length,this.writeHeader(l),l.writeUint32(this.entries.length);for(var d=0;d<this.entries.length;d++){var c=this.entries[d];l.writeUint32(c.segment_duration),l.writeInt32(c.media_time),l.writeInt16(c.media_rate_integer),l.writeInt16(c.media_rate_fraction)}},Z.emsgBox.prototype.write=function(l){this.version=0,this.flags=0,this.size=4*4+this.message_data.length+(this.scheme_id_uri.length+1)+(this.value.length+1),this.writeHeader(l),l.writeCString(this.scheme_id_uri),l.writeCString(this.value),l.writeUint32(this.timescale),l.writeUint32(this.presentation_time_delta),l.writeUint32(this.event_duration),l.writeUint32(this.id),l.writeUint8Array(this.message_data)},Z.ftypBox.prototype.write=function(l){this.size=8+4*this.compatible_brands.length,this.writeHeader(l),l.writeString(this.major_brand,null,4),l.writeUint32(this.minor_version);for(var d=0;d<this.compatible_brands.length;d++)l.writeString(this.compatible_brands[d],null,4)},Z.hdlrBox.prototype.write=function(l){this.size=5*4+this.name.length+1,this.version=0,this.flags=0,this.writeHeader(l),l.writeUint32(0),l.writeString(this.handler,null,4),l.writeUint32(0),l.writeUint32(0),l.writeUint32(0),l.writeCString(this.name)},Z.hvcCBox.prototype.write=function(l){var d,c;for(this.size=23,d=0;d<this.nalu_arrays.length;d++)for(this.size+=3,c=0;c<this.nalu_arrays[d].length;c++)this.size+=2+this.nalu_arrays[d][c].data.length;for(this.writeHeader(l),l.writeUint8(this.configurationVersion),l.writeUint8(this.general_profile_space<<6+this.general_tier_flag<<5+this.general_profile_idc),l.writeUint32(this.general_profile_compatibility),l.writeUint8Array(this.general_constraint_indicator),l.writeUint8(this.general_level_idc),l.writeUint16(this.min_spatial_segmentation_idc+(15<<24)),l.writeUint8(this.parallelismType+252),l.writeUint8(this.chroma_format_idc+252),l.writeUint8(this.bit_depth_luma_minus8+248),l.writeUint8(this.bit_depth_chroma_minus8+248),l.writeUint16(this.avgFrameRate),l.writeUint8((this.constantFrameRate<<6)+(this.numTemporalLayers<<3)+(this.temporalIdNested<<2)+this.lengthSizeMinusOne),l.writeUint8(this.nalu_arrays.length),d=0;d<this.nalu_arrays.length;d++)for(l.writeUint8((this.nalu_arrays[d].completeness<<7)+this.nalu_arrays[d].nalu_type),l.writeUint16(this.nalu_arrays[d].length),c=0;c<this.nalu_arrays[d].length;c++)l.writeUint16(this.nalu_arrays[d][c].data.length),l.writeUint8Array(this.nalu_arrays[d][c].data)},Z.kindBox.prototype.write=function(l){this.version=0,this.flags=0,this.size=this.schemeURI.length+1+(this.value.length+1),this.writeHeader(l),l.writeCString(this.schemeURI),l.writeCString(this.value)},Z.mdhdBox.prototype.write=function(l){this.size=4*4+2*2,this.flags=0,this.version=0,this.writeHeader(l),l.writeUint32(this.creation_time),l.writeUint32(this.modification_time),l.writeUint32(this.timescale),l.writeUint32(this.duration),l.writeUint16(this.language),l.writeUint16(0)},Z.mehdBox.prototype.write=function(l){this.version=0,this.flags=0,this.size=4,this.writeHeader(l),l.writeUint32(this.fragment_duration)},Z.mfhdBox.prototype.write=function(l){this.version=0,this.flags=0,this.size=4,this.writeHeader(l),l.writeUint32(this.sequence_number)},Z.mvhdBox.prototype.write=function(l){this.version=0,this.flags=0,this.size=23*4+2*2,this.writeHeader(l),l.writeUint32(this.creation_time),l.writeUint32(this.modification_time),l.writeUint32(this.timescale),l.writeUint32(this.duration),l.writeUint32(this.rate),l.writeUint16(this.volume<<8),l.writeUint16(0),l.writeUint32(0),l.writeUint32(0),l.writeUint32Array(this.matrix),l.writeUint32(0),l.writeUint32(0),l.writeUint32(0),l.writeUint32(0),l.writeUint32(0),l.writeUint32(0),l.writeUint32(this.next_track_id)},Z.SampleEntry.prototype.writeHeader=function(l){this.size=8,Z.Box.prototype.writeHeader.call(this,l),l.writeUint8(0),l.writeUint8(0),l.writeUint8(0),l.writeUint8(0),l.writeUint8(0),l.writeUint8(0),l.writeUint16(this.data_reference_index)},Z.SampleEntry.prototype.writeFooter=function(l){for(var d=0;d<this.boxes.length;d++)this.boxes[d].write(l),this.size+=this.boxes[d].size;m.debug("BoxWriter","Adjusting box "+this.type+" with new size "+this.size),l.adjustUint32(this.sizePosition,this.size)},Z.SampleEntry.prototype.write=function(l){this.writeHeader(l),l.writeUint8Array(this.data),this.size+=this.data.length,m.debug("BoxWriter","Adjusting box "+this.type+" with new size "+this.size),l.adjustUint32(this.sizePosition,this.size)},Z.VisualSampleEntry.prototype.write=function(l){this.writeHeader(l),this.size+=2*7+6*4+32,l.writeUint16(0),l.writeUint16(0),l.writeUint32(0),l.writeUint32(0),l.writeUint32(0),l.writeUint16(this.width),l.writeUint16(this.height),l.writeUint32(this.horizresolution),l.writeUint32(this.vertresolution),l.writeUint32(0),l.writeUint16(this.frame_count),l.writeUint8(Math.min(31,this.compressorname.length)),l.writeString(this.compressorname,null,31),l.writeUint16(this.depth),l.writeInt16(-1),this.writeFooter(l)},Z.AudioSampleEntry.prototype.write=function(l){this.writeHeader(l),this.size+=2*4+3*4,l.writeUint32(0),l.writeUint32(0),l.writeUint16(this.channel_count),l.writeUint16(this.samplesize),l.writeUint16(0),l.writeUint16(0),l.writeUint32(this.samplerate<<16),this.writeFooter(l)},Z.stppSampleEntry.prototype.write=function(l){this.writeHeader(l),this.size+=this.namespace.length+1+this.schema_location.length+1+this.auxiliary_mime_types.length+1,l.writeCString(this.namespace),l.writeCString(this.schema_location),l.writeCString(this.auxiliary_mime_types),this.writeFooter(l)},Z.SampleGroupEntry.prototype.write=function(l){l.writeUint8Array(this.data)},Z.sbgpBox.prototype.write=function(l){this.version=1,this.flags=0,this.size=12+8*this.entries.length,this.writeHeader(l),l.writeString(this.grouping_type,null,4),l.writeUint32(this.grouping_type_parameter),l.writeUint32(this.entries.length);for(var d=0;d<this.entries.length;d++){var c=this.entries[d];l.writeInt32(c.sample_count),l.writeInt32(c.group_description_index)}},Z.sgpdBox.prototype.write=function(l){var d,c;for(this.flags=0,this.size=12,d=0;d<this.entries.length;d++)c=this.entries[d],this.version===1&&(this.default_length===0&&(this.size+=4),this.size+=c.data.length);for(this.writeHeader(l),l.writeString(this.grouping_type,null,4),this.version===1&&l.writeUint32(this.default_length),this.version>=2&&l.writeUint32(this.default_sample_description_index),l.writeUint32(this.entries.length),d=0;d<this.entries.length;d++)c=this.entries[d],this.version===1&&this.default_length===0&&l.writeUint32(c.description_length),c.write(l)},Z.sidxBox.prototype.write=function(l){this.version=0,this.flags=0,this.size=4*4+2+2+12*this.references.length,this.writeHeader(l),l.writeUint32(this.reference_ID),l.writeUint32(this.timescale),l.writeUint32(this.earliest_presentation_time),l.writeUint32(this.first_offset),l.writeUint16(0),l.writeUint16(this.references.length);for(var d=0;d<this.references.length;d++){var c=this.references[d];l.writeUint32(c.reference_type<<31|c.referenced_size),l.writeUint32(c.subsegment_duration),l.writeUint32(c.starts_with_SAP<<31|c.SAP_type<<28|c.SAP_delta_time)}},Z.smhdBox.prototype.write=function(l){this.version=0,this.flags=1,this.size=4,this.writeHeader(l),l.writeUint16(this.balance),l.writeUint16(0)},Z.stcoBox.prototype.write=function(l){this.version=0,this.flags=0,this.size=4+4*this.chunk_offsets.length,this.writeHeader(l),l.writeUint32(this.chunk_offsets.length),l.writeUint32Array(this.chunk_offsets)},Z.stscBox.prototype.write=function(l){var d;for(this.version=0,this.flags=0,this.size=4+12*this.first_chunk.length,this.writeHeader(l),l.writeUint32(this.first_chunk.length),d=0;d<this.first_chunk.length;d++)l.writeUint32(this.first_chunk[d]),l.writeUint32(this.samples_per_chunk[d]),l.writeUint32(this.sample_description_index[d])},Z.stsdBox.prototype.write=function(l){var d;for(this.version=0,this.flags=0,this.size=0,this.writeHeader(l),l.writeUint32(this.entries.length),this.size+=4,d=0;d<this.entries.length;d++)this.entries[d].write(l),this.size+=this.entries[d].size;m.debug("BoxWriter","Adjusting box "+this.type+" with new size "+this.size),l.adjustUint32(this.sizePosition,this.size)},Z.stshBox.prototype.write=function(l){var d;for(this.version=0,this.flags=0,this.size=4+8*this.shadowed_sample_numbers.length,this.writeHeader(l),l.writeUint32(this.shadowed_sample_numbers.length),d=0;d<this.shadowed_sample_numbers.length;d++)l.writeUint32(this.shadowed_sample_numbers[d]),l.writeUint32(this.sync_sample_numbers[d])},Z.stssBox.prototype.write=function(l){this.version=0,this.flags=0,this.size=4+4*this.sample_numbers.length,this.writeHeader(l),l.writeUint32(this.sample_numbers.length),l.writeUint32Array(this.sample_numbers)},Z.stszBox.prototype.write=function(l){var d,c=!0;if(this.version=0,this.flags=0,this.sample_sizes.length>0)for(d=0;d+1<this.sample_sizes.length;)if(this.sample_sizes[d+1]!==this.sample_sizes[0]){c=!1;break}else d++;else c=!1;this.size=8,c||(this.size+=4*this.sample_sizes.length),this.writeHeader(l),c?l.writeUint32(this.sample_sizes[0]):l.writeUint32(0),l.writeUint32(this.sample_sizes.length),c||l.writeUint32Array(this.sample_sizes)},Z.sttsBox.prototype.write=function(l){var d;for(this.version=0,this.flags=0,this.size=4+8*this.sample_counts.length,this.writeHeader(l),l.writeUint32(this.sample_counts.length),d=0;d<this.sample_counts.length;d++)l.writeUint32(this.sample_counts[d]),l.writeUint32(this.sample_deltas[d])},Z.tfdtBox.prototype.write=function(l){var d=Math.pow(2,32)-1;this.version=this.baseMediaDecodeTime>d?1:0,this.flags=0,this.size=4,this.version===1&&(this.size+=4),this.writeHeader(l),this.version===1?l.writeUint64(this.baseMediaDecodeTime):l.writeUint32(this.baseMediaDecodeTime)},Z.tfhdBox.prototype.write=function(l){this.version=0,this.size=4,this.flags&Z.TFHD_FLAG_BASE_DATA_OFFSET&&(this.size+=8),this.flags&Z.TFHD_FLAG_SAMPLE_DESC&&(this.size+=4),this.flags&Z.TFHD_FLAG_SAMPLE_DUR&&(this.size+=4),this.flags&Z.TFHD_FLAG_SAMPLE_SIZE&&(this.size+=4),this.flags&Z.TFHD_FLAG_SAMPLE_FLAGS&&(this.size+=4),this.writeHeader(l),l.writeUint32(this.track_id),this.flags&Z.TFHD_FLAG_BASE_DATA_OFFSET&&l.writeUint64(this.base_data_offset),this.flags&Z.TFHD_FLAG_SAMPLE_DESC&&l.writeUint32(this.default_sample_description_index),this.flags&Z.TFHD_FLAG_SAMPLE_DUR&&l.writeUint32(this.default_sample_duration),this.flags&Z.TFHD_FLAG_SAMPLE_SIZE&&l.writeUint32(this.default_sample_size),this.flags&Z.TFHD_FLAG_SAMPLE_FLAGS&&l.writeUint32(this.default_sample_flags)},Z.tkhdBox.prototype.write=function(l){this.version=0,this.size=4*18+2*4,this.writeHeader(l),l.writeUint32(this.creation_time),l.writeUint32(this.modification_time),l.writeUint32(this.track_id),l.writeUint32(0),l.writeUint32(this.duration),l.writeUint32(0),l.writeUint32(0),l.writeInt16(this.layer),l.writeInt16(this.alternate_group),l.writeInt16(this.volume<<8),l.writeUint16(0),l.writeInt32Array(this.matrix),l.writeUint32(this.width),l.writeUint32(this.height)},Z.trexBox.prototype.write=function(l){this.version=0,this.flags=0,this.size=4*5,this.writeHeader(l),l.writeUint32(this.track_id),l.writeUint32(this.default_sample_description_index),l.writeUint32(this.default_sample_duration),l.writeUint32(this.default_sample_size),l.writeUint32(this.default_sample_flags)},Z.trunBox.prototype.write=function(l){this.version=0,this.size=4,this.flags&Z.TRUN_FLAGS_DATA_OFFSET&&(this.size+=4),this.flags&Z.TRUN_FLAGS_FIRST_FLAG&&(this.size+=4),this.flags&Z.TRUN_FLAGS_DURATION&&(this.size+=4*this.sample_duration.length),this.flags&Z.TRUN_FLAGS_SIZE&&(this.size+=4*this.sample_size.length),this.flags&Z.TRUN_FLAGS_FLAGS&&(this.size+=4*this.sample_flags.length),this.flags&Z.TRUN_FLAGS_CTS_OFFSET&&(this.size+=4*this.sample_composition_time_offset.length),this.writeHeader(l),l.writeUint32(this.sample_count),this.flags&Z.TRUN_FLAGS_DATA_OFFSET&&(this.data_offset_position=l.getPosition(),l.writeInt32(this.data_offset)),this.flags&Z.TRUN_FLAGS_FIRST_FLAG&&l.writeUint32(this.first_sample_flags);for(var d=0;d<this.sample_count;d++)this.flags&Z.TRUN_FLAGS_DURATION&&l.writeUint32(this.sample_duration[d]),this.flags&Z.TRUN_FLAGS_SIZE&&l.writeUint32(this.sample_size[d]),this.flags&Z.TRUN_FLAGS_FLAGS&&l.writeUint32(this.sample_flags[d]),this.flags&Z.TRUN_FLAGS_CTS_OFFSET&&(this.version===0?l.writeUint32(this.sample_composition_time_offset[d]):l.writeInt32(this.sample_composition_time_offset[d]))},Z["url Box"].prototype.write=function(l){this.version=0,this.location?(this.flags=0,this.size=this.location.length+1):(this.flags=1,this.size=0),this.writeHeader(l),this.location&&l.writeCString(this.location)},Z["urn Box"].prototype.write=function(l){this.version=0,this.flags=0,this.size=this.name.length+1+(this.location?this.location.length+1:0),this.writeHeader(l),l.writeCString(this.name),this.location&&l.writeCString(this.location)},Z.vmhdBox.prototype.write=function(l){this.version=0,this.flags=1,this.size=8,this.writeHeader(l),l.writeUint16(this.graphicsmode),l.writeUint16Array(this.opcolor)},Z.cttsBox.prototype.unpack=function(l){var d,c,t;for(t=0,d=0;d<this.sample_counts.length;d++)for(c=0;c<this.sample_counts[d];c++)l[t].pts=l[t].dts+this.sample_offsets[d],t++},Z.sttsBox.prototype.unpack=function(l){var d,c,t;for(t=0,d=0;d<this.sample_counts.length;d++)for(c=0;c<this.sample_counts[d];c++)t===0?l[t].dts=0:l[t].dts=l[t-1].dts+this.sample_deltas[d],t++},Z.stcoBox.prototype.unpack=function(l){var d;for(d=0;d<this.chunk_offsets.length;d++)l[d].offset=this.chunk_offsets[d]},Z.stscBox.prototype.unpack=function(l){var d,c,t,a,n;for(a=0,n=0,d=0;d<this.first_chunk.length;d++)for(c=0;c<(d+1<this.first_chunk.length?this.first_chunk[d+1]:1/0);c++)for(n++,t=0;t<this.samples_per_chunk[d];t++){if(l[a])l[a].description_index=this.sample_description_index[d],l[a].chunk_index=n;else return;a++}},Z.stszBox.prototype.unpack=function(l){var d;for(d=0;d<this.sample_sizes.length;d++)l[d].size=this.sample_sizes[d]},Z.DIFF_BOXES_PROP_NAMES=["boxes","entries","references","subsamples","items","item_infos","extents","associations","subsegments","ranges","seekLists","seekPoints","esd","levels"],Z.DIFF_PRIMITIVE_ARRAY_PROP_NAMES=["compatible_brands","matrix","opcolor","sample_counts","sample_counts","sample_deltas","first_chunk","samples_per_chunk","sample_sizes","chunk_offsets","sample_offsets","sample_description_index","sample_duration"],Z.boxEqualFields=function(l,d){if(l&&!d)return!1;var c;for(c in l)if(!(Z.DIFF_BOXES_PROP_NAMES.indexOf(c)>-1)){if(l[c]instanceof Z.Box||d[c]instanceof Z.Box||typeof l[c]>"u"||typeof d[c]>"u"||typeof l[c]=="function"||typeof d[c]=="function"||l.subBoxNames&&l.subBoxNames.indexOf(c.slice(0,4))>-1||d.subBoxNames&&d.subBoxNames.indexOf(c.slice(0,4))>-1||c==="data"||c==="start"||c==="size"||c==="creation_time"||c==="modification_time"||Z.DIFF_PRIMITIVE_ARRAY_PROP_NAMES.indexOf(c)>-1)continue;if(l[c]!==d[c])return!1}return!0},Z.boxEqual=function(l,d){if(!Z.boxEqualFields(l,d))return!1;for(var c=0;c<Z.DIFF_BOXES_PROP_NAMES.length;c++){var t=Z.DIFF_BOXES_PROP_NAMES[c];if(l[t]&&d[t]&&!Z.boxEqual(l[t],d[t]))return!1}return!0};var K=function(){};K.prototype.parseSample=function(l){var d={},c;d.resources=[];var t=new e(l.data.buffer);if(!l.subsamples||l.subsamples.length===0)d.documentString=t.readString(l.data.length);else if(d.documentString=t.readString(l.subsamples[0].size),l.subsamples.length>1)for(c=1;c<l.subsamples.length;c++)d.resources[c]=t.readUint8Array(l.subsamples[c].size);return typeof DOMParser<"u"&&(d.document=new DOMParser().parseFromString(d.documentString,"application/xml")),d};var U=function(){};U.prototype.parseSample=function(l){var d,c=new e(l.data.buffer);return d=c.readString(l.data.length),d},U.prototype.parseConfig=function(l){var d,c=new e(l.buffer);return c.readUint32(),d=c.readCString(),d},h.XMLSubtitlein4Parser=K,h.Textin4Parser=U;var u=function(l){this.stream=l||new o,this.boxes=[],this.mdats=[],this.moofs=[],this.isProgressive=!1,this.moovStartFound=!1,this.onMoovStart=null,this.moovStartSent=!1,this.onReady=null,this.readySent=!1,this.onSegment=null,this.onSamples=null,this.onError=null,this.sampleListBuilt=!1,this.fragmentedTracks=[],this.extractedTracks=[],this.isFragmentationInitialized=!1,this.sampleProcessingStarted=!1,this.nextMoofNumber=0,this.itemListBuilt=!1,this.onSidx=null,this.sidxSent=!1};u.prototype.setSegmentOptions=function(l,d,c){var t=this.getTrackById(l);if(t){var a={};this.fragmentedTracks.push(a),a.id=l,a.user=d,a.trak=t,t.nextSample=0,a.segmentStream=null,a.nb_samples=1e3,a.rapAlignement=!0,c&&(c.nbSamples&&(a.nb_samples=c.nbSamples),c.rapAlignement&&(a.rapAlignement=c.rapAlignement))}},u.prototype.unsetSegmentOptions=function(l){for(var d=-1,c=0;c<this.fragmentedTracks.length;c++){var t=this.fragmentedTracks[c];t.id==l&&(d=c)}d>-1&&this.fragmentedTracks.splice(d,1)},u.prototype.setExtractionOptions=function(l,d,c){var t=this.getTrackById(l);if(t){var a={};this.extractedTracks.push(a),a.id=l,a.user=d,a.trak=t,t.nextSample=0,a.nb_samples=1e3,a.samples=[],c&&c.nbSamples&&(a.nb_samples=c.nbSamples)}},u.prototype.unsetExtractionOptions=function(l){for(var d=-1,c=0;c<this.extractedTracks.length;c++){var t=this.extractedTracks[c];t.id==l&&(d=c)}d>-1&&this.extractedTracks.splice(d,1)},u.prototype.parse=function(){var l,d,c=!1;if(!(this.restoreParsePosition&&!this.restoreParsePosition()))for(;;)if(this.hasIncompleteMdat&&this.hasIncompleteMdat()){if(this.processIncompleteMdat())continue;return}else if(this.saveParsePosition&&this.saveParsePosition(),l=Z.parseOneBox(this.stream,c),l.code===Z.ERR_NOT_ENOUGH_DATA)if(this.processIncompleteBox){if(this.processIncompleteBox(l))continue;return}else return;else{var t;switch(d=l.box,t=d.type!=="uuid"?d.type:d.uuid,this.boxes.push(d),t){case"mdat":this.mdats.push(d);break;case"moof":this.moofs.push(d);break;case"moov":this.moovStartFound=!0,this.mdats.length===0&&(this.isProgressive=!0);default:this[t]!==void 0&&m.warn("ISOFile","Duplicate Box of type: "+t+", overriding previous occurrence"),this[t]=d;break}this.updateUsedBytes&&this.updateUsedBytes(d,l)}},u.prototype.checkBuffer=function(l){if(l==null)throw"Buffer must be defined and non empty";if(l.fileStart===void 0)throw"Buffer must have a fileStart property";return l.byteLength===0?(m.warn("ISOFile","Ignoring empty buffer (fileStart: "+l.fileStart+")"),this.stream.logBufferLevel(),!1):(m.info("ISOFile","Processing buffer (fileStart: "+l.fileStart+")"),l.usedBytes=0,this.stream.insertBuffer(l),this.stream.logBufferLevel(),this.stream.initialized()?!0:(m.warn("ISOFile","Not ready to start parsing"),!1))},u.prototype.appendBuffer=function(l,d){var c;if(this.checkBuffer(l))return this.parse(),this.moovStartFound&&!this.moovStartSent&&(this.moovStartSent=!0,this.onMoovStart&&this.onMoovStart()),this.moov?(this.sampleListBuilt||(this.buildSampleLists(),this.sampleListBuilt=!0),this.updateSampleLists(),this.onReady&&!this.readySent&&(this.readySent=!0,this.onReady(this.getInfo())),this.processSamples(d),this.nextSeekPosition?(c=this.nextSeekPosition,this.nextSeekPosition=void 0):c=this.nextParsePosition,this.stream.getEndFilePositionAfter&&(c=this.stream.getEndFilePositionAfter(c))):this.nextParsePosition?c=this.nextParsePosition:c=0,this.sidx&&this.onSidx&&!this.sidxSent&&(this.onSidx(this.sidx),this.sidxSent=!0),this.meta&&(this.flattenItemInfo&&!this.itemListBuilt&&(this.flattenItemInfo(),this.itemListBuilt=!0),this.processItems&&this.processItems(this.onItem)),this.stream.cleanBuffers&&(m.info("ISOFile","Done processing buffer (fileStart: "+l.fileStart+") - next buffer to fetch should have a fileStart position of "+c),this.stream.logBufferLevel(),this.stream.cleanBuffers(),this.stream.logBufferLevel(!0),m.info("ISOFile","Sample data size in memory: "+this.getAllocatedSampleDataSize())),c},u.prototype.getInfo=function(){var l,d,c={},t,a,n,b,s=new Date("1904-01-01T00:00:00Z").getTime();if(this.moov)for(c.hasMoov=!0,c.duration=this.moov.mvhd.duration,c.timescale=this.moov.mvhd.timescale,c.isFragmented=this.moov.mvex!=null,c.isFragmented&&this.moov.mvex.mehd&&(c.fragment_duration=this.moov.mvex.mehd.fragment_duration),c.isProgressive=this.isProgressive,c.hasIOD=this.moov.iods!=null,c.brands=[],c.brands.push(this.ftyp.major_brand),c.brands=c.brands.concat(this.ftyp.compatible_brands),c.created=new Date(s+this.moov.mvhd.creation_time*1e3),c.modified=new Date(s+this.moov.mvhd.modification_time*1e3),c.tracks=[],c.audioTracks=[],c.videoTracks=[],c.subtitleTracks=[],c.metadataTracks=[],c.hintTracks=[],c.otherTracks=[],l=0;l<this.moov.traks.length;l++){if(t=this.moov.traks[l],b=t.mdia.minf.stbl.stsd.entries[0],a={},c.tracks.push(a),a.id=t.tkhd.track_id,a.name=t.mdia.hdlr.name,a.references=[],t.tref)for(d=0;d<t.tref.boxes.length;d++)n={},a.references.push(n),n.type=t.tref.boxes[d].type,n.track_ids=t.tref.boxes[d].track_ids;t.edts&&(a.edits=t.edts.elst.entries),a.created=new Date(s+t.tkhd.creation_time*1e3),a.modified=new Date(s+t.tkhd.modification_time*1e3),a.movie_duration=t.tkhd.duration,a.movie_timescale=c.timescale,a.layer=t.tkhd.layer,a.alternate_group=t.tkhd.alternate_group,a.volume=t.tkhd.volume,a.matrix=t.tkhd.matrix,a.track_width=t.tkhd.width/65536,a.track_height=t.tkhd.height/65536,a.timescale=t.mdia.mdhd.timescale,a.cts_shift=t.mdia.minf.stbl.cslg,a.duration=t.mdia.mdhd.duration,a.samples_duration=t.samples_duration,a.codec=b.getCodec(),a.kind=t.udta&&t.udta.kinds.length?t.udta.kinds[0]:{schemeURI:"",value:""},a.language=t.mdia.elng?t.mdia.elng.extended_language:t.mdia.mdhd.languageString,a.nb_samples=t.samples.length,a.size=t.samples_size,a.bitrate=a.size*8*a.timescale/a.samples_duration,b.isAudio()?(a.type="audio",c.audioTracks.push(a),a.audio={},a.audio.sample_rate=b.getSampleRate(),a.audio.channel_count=b.getChannelCount(),a.audio.sample_size=b.getSampleSize()):b.isVideo()?(a.type="video",c.videoTracks.push(a),a.video={},a.video.width=b.getWidth(),a.video.height=b.getHeight()):b.isSubtitle()?(a.type="subtitles",c.subtitleTracks.push(a)):b.isHint()?(a.type="metadata",c.hintTracks.push(a)):b.isMetadata()?(a.type="metadata",c.metadataTracks.push(a)):(a.type="metadata",c.otherTracks.push(a))}else c.hasMoov=!1;if(c.mime="",c.hasMoov&&c.tracks){for(c.videoTracks&&c.videoTracks.length>0?c.mime+='video/mp4; codecs="':c.audioTracks&&c.audioTracks.length>0?c.mime+='audio/mp4; codecs="':c.mime+='application/mp4; codecs="',l=0;l<c.tracks.length;l++)l!==0&&(c.mime+=","),c.mime+=c.tracks[l].codec;c.mime+='"; profiles="',c.mime+=this.ftyp.compatible_brands.join(),c.mime+='"'}return c},u.prototype.setNextSeekPositionFromSample=function(l){l&&(this.nextSeekPosition?this.nextSeekPosition=Math.min(l.offset+l.alreadyRead,this.nextSeekPosition):this.nextSeekPosition=l.offset+l.alreadyRead)},u.prototype.processSamples=function(l){var d,c;if(this.sampleProcessingStarted){if(this.isFragmentationInitialized&&this.onSegment!==null)for(d=0;d<this.fragmentedTracks.length;d++){var t=this.fragmentedTracks[d];for(c=t.trak;c.nextSample<c.samples.length&&this.sampleProcessingStarted;){m.debug("ISOFile","Creating media fragment on track #"+t.id+" for sample "+c.nextSample);var a=this.createFragment(t.id,c.nextSample,t.segmentStream);if(a)t.segmentStream=a,c.nextSample++;else break;if((c.nextSample%t.nb_samples===0||l||c.nextSample>=c.samples.length)&&(m.info("ISOFile","Sending fragmented data on track #"+t.id+" for samples ["+Math.max(0,c.nextSample-t.nb_samples)+","+(c.nextSample-1)+"]"),m.info("ISOFile","Sample data size in memory: "+this.getAllocatedSampleDataSize()),this.onSegment&&this.onSegment(t.id,t.user,t.segmentStream.buffer,c.nextSample,l||c.nextSample>=c.samples.length),t.segmentStream=null,t!==this.fragmentedTracks[d]))break}}if(this.onSamples!==null)for(d=0;d<this.extractedTracks.length;d++){var n=this.extractedTracks[d];for(c=n.trak;c.nextSample<c.samples.length&&this.sampleProcessingStarted;){m.debug("ISOFile","Exporting on track #"+n.id+" sample #"+c.nextSample);var b=this.getSample(c,c.nextSample);if(b)c.nextSample++,n.samples.push(b);else{this.setNextSeekPositionFromSample(c.samples[c.nextSample]);break}if((c.nextSample%n.nb_samples===0||c.nextSample>=c.samples.length)&&(m.debug("ISOFile","Sending samples on track #"+n.id+" for sample "+c.nextSample),this.onSamples&&this.onSamples(n.id,n.user,n.samples),n.samples=[],n!==this.extractedTracks[d]))break}}}},u.prototype.getBox=function(l){var d=this.getBoxes(l,!0);return d.length?d[0]:null},u.prototype.getBoxes=function(l,d){var c=[];return u._sweep.call(this,l,c,d),c},u._sweep=function(l,d,c){this.type&&this.type==l&&d.push(this);for(var t in this.boxes){if(d.length&&c)return;u._sweep.call(this.boxes[t],l,d,c)}},u.prototype.getTrackSamplesInfo=function(l){var d=this.getTrackById(l);if(d)return d.samples},u.prototype.getTrackSample=function(l,d){var c=this.getTrackById(l),t=this.getSample(c,d);return t},u.prototype.releaseUsedSamples=function(l,d){var c=0,t=this.getTrackById(l);t.lastValidSample||(t.lastValidSample=0);for(var a=t.lastValidSample;a<d;a++)c+=this.releaseSample(t,a);m.info("ISOFile","Track #"+l+" released samples up to "+d+" (released size: "+c+", remaining: "+this.samplesDataSize+")"),t.lastValidSample=d},u.prototype.start=function(){this.sampleProcessingStarted=!0,this.processSamples(!1)},u.prototype.stop=function(){this.sampleProcessingStarted=!1},u.prototype.flush=function(){m.info("ISOFile","Flushing remaining samples"),this.updateSampleLists(),this.processSamples(!0),this.stream.cleanBuffers(),this.stream.logBufferLevel(!0)},u.prototype.seekTrack=function(l,d,c){var t,a,n=1/0,b=0,s=0,X;if(c.samples.length===0)return m.info("ISOFile","No sample in track, cannot seek! Using time "+m.getDurationString(0,1)+" and offset: 0"),{offset:0,time:0};for(t=0;t<c.samples.length;t++){if(a=c.samples[t],t===0)s=0,X=a.timescale;else if(a.cts>l*a.timescale){s=t-1;break}d&&a.is_sync&&(b=t)}for(d&&(s=b),l=c.samples[s].cts,c.nextSample=s;c.samples[s].alreadyRead===c.samples[s].size&&c.samples[s+1];)s++;return n=c.samples[s].offset+c.samples[s].alreadyRead,m.info("ISOFile","Seeking to "+(d?"RAP":"")+" sample #"+c.nextSample+" on track "+c.tkhd.track_id+", time "+m.getDurationString(l,X)+" and offset: "+n),{offset:n,time:l/X}},u.prototype.getTrackDuration=function(l){var d;return l.samples?(d=l.samples[l.samples.length-1],(d.cts+d.duration)/d.timescale):1/0},u.prototype.seek=function(l,d){var c=this.moov,t,a,n,b={offset:1/0,time:1/0};if(this.moov){for(n=0;n<c.traks.length;n++)t=c.traks[n],!(l>this.getTrackDuration(t))&&(a=this.seekTrack(l,d,t),a.offset<b.offset&&(b.offset=a.offset),a.time<b.time&&(b.time=a.time));return m.info("ISOFile","Seeking at time "+m.getDurationString(b.time,1)+" needs a buffer with a fileStart position of "+b.offset),b.offset===1/0?b={offset:this.nextParsePosition,time:0}:b.offset=this.stream.getEndFilePositionAfter(b.offset),m.info("ISOFile","Adjusted seek position (after checking data already in buffer): "+b.offset),b}else throw"Cannot seek: moov not received!"},u.prototype.equal=function(l){for(var d=0;d<this.boxes.length&&d<l.boxes.length;){var c=this.boxes[d],t=l.boxes[d];if(!Z.boxEqual(c,t))return!1;d++}return!0},h.ISOFile=u,u.prototype.lastBoxStartPosition=0,u.prototype.parsingMdat=null,u.prototype.nextParsePosition=0,u.prototype.discardMdatData=!1,u.prototype.processIncompleteBox=function(l){var d,c,t;return l.type==="mdat"?(d=new Z[l.type+"Box"](l.size),this.parsingMdat=d,this.boxes.push(d),this.mdats.push(d),d.start=l.start,d.hdr_size=l.hdr_size,this.stream.addUsedBytes(d.hdr_size),this.lastBoxStartPosition=d.start+d.size,t=this.stream.seek(d.start+d.size,!1,this.discardMdatData),t?(this.parsingMdat=null,!0):(this.moovStartFound?this.nextParsePosition=this.stream.findEndContiguousBuf():this.nextParsePosition=d.start+d.size,!1)):(l.type==="moov"&&(this.moovStartFound=!0,this.mdats.length===0&&(this.isProgressive=!0)),c=this.stream.mergeNextBuffer?this.stream.mergeNextBuffer():!1,c?(this.nextParsePosition=this.stream.getEndPosition(),!0):(l.type?this.moovStartFound?this.nextParsePosition=this.stream.getEndPosition():this.nextParsePosition=this.stream.getPosition()+l.size:this.nextParsePosition=this.stream.getEndPosition(),!1))},u.prototype.hasIncompleteMdat=function(){return this.parsingMdat!==null},u.prototype.processIncompleteMdat=function(){var l,d;return l=this.parsingMdat,d=this.stream.seek(l.start+l.size,!1,this.discardMdatData),d?(m.debug("ISOFile","Found 'mdat' end in buffered data"),this.parsingMdat=null,!0):(this.nextParsePosition=this.stream.findEndContiguousBuf(),!1)},u.prototype.restoreParsePosition=function(){return this.stream.seek(this.lastBoxStartPosition,!0,this.discardMdatData)},u.prototype.saveParsePosition=function(){this.lastBoxStartPosition=this.stream.getPosition()},u.prototype.updateUsedBytes=function(l,d){this.stream.addUsedBytes&&(l.type==="mdat"?(this.stream.addUsedBytes(l.hdr_size),this.discardMdatData&&this.stream.addUsedBytes(l.size-l.hdr_size)):this.stream.addUsedBytes(l.size))},u.prototype.add=Z.Box.prototype.add,u.prototype.addBox=Z.Box.prototype.addBox,u.prototype.init=function(l){var d=l||{};this.add("ftyp").set("major_brand",d.brands&&d.brands[0]||"iso4").set("minor_version",0).set("compatible_brands",d.brands||["iso4"]);var c=this.add("moov");return c.add("mvhd").set("timescale",d.timescale||600).set("rate",d.rate||65536).set("creation_time",0).set("modification_time",0).set("duration",d.duration||0).set("volume",d.width?0:256).set("matrix",[65536,0,0,0,65536,0,0,0,1073741824]).set("next_track_id",1),c.add("mvex"),this},u.prototype.addTrack=function(l){this.moov||this.init(l);var d=l||{};d.width=d.width||320,d.height=d.height||320,d.id=d.id||this.moov.mvhd.next_track_id,d.type=d.type||"avc1";var c=this.moov.add("trak");this.moov.mvhd.next_track_id=d.id+1,c.add("tkhd").set("flags",Z.TKHD_FLAG_ENABLED|Z.TKHD_FLAG_IN_MOVIE|Z.TKHD_FLAG_IN_PREVIEW).set("creation_time",0).set("modification_time",0).set("track_id",d.id).set("duration",d.duration||0).set("layer",d.layer||0).set("alternate_group",0).set("volume",1).set("matrix",[0,0,0,0,0,0,0,0,0]).set("width",d.width<<16).set("height",d.height<<16);var t=c.add("mdia");t.add("mdhd").set("creation_time",0).set("modification_time",0).set("timescale",d.timescale||1).set("duration",d.media_duration||0).set("language",d.language||"und"),t.add("hdlr").set("handler",d.hdlr||"vide").set("name",d.name||"Track created with MP4Box.js"),t.add("elng").set("extended_language",d.language||"fr-FR");var a=t.add("minf");if(Z[d.type+"SampleEntry"]!==void 0){var n=new Z[d.type+"SampleEntry"];n.data_reference_index=1;var b="";for(var s in Z.sampleEntryCodes)for(var X=Z.sampleEntryCodes[s],p=0;p<X.length;p++)if(X.indexOf(d.type)>-1){b=s;break}switch(b){case"Visual":if(a.add("vmhd").set("graphicsmode",0).set("opcolor",[0,0,0]),n.set("width",d.width).set("height",d.height).set("horizresolution",72<<16).set("vertresolution",72<<16).set("frame_count",1).set("compressorname",d.type+" Compressor").set("depth",24),d.avcDecoderConfigRecord){var V=new Z.avcCBox;V.parse(new e(d.avcDecoderConfigRecord)),n.addBox(V)}else if(d.hevcDecoderConfigRecord){var y=new Z.hvcCBox;y.parse(new e(d.hevcDecoderConfigRecord)),n.addBox(y)}break;case"Audio":a.add("smhd").set("balance",d.balance||0),n.set("channel_count",d.channel_count||2).set("samplesize",d.samplesize||16).set("samplerate",d.samplerate||65536);break;case"Hint":a.add("hmhd");break;case"Subtitle":switch(a.add("sthd"),d.type){case"stpp":n.set("namespace",d.namespace||"nonamespace").set("schema_location",d.schema_location||"").set("auxiliary_mime_types",d.auxiliary_mime_types||"");break}break;case"Metadata":a.add("nmhd");break;case"System":a.add("nmhd");break;default:a.add("nmhd");break}d.description&&n.addBox(d.description),d.description_boxes&&d.description_boxes.forEach(function(W){n.addBox(W)}),a.add("dinf").add("dref").addEntry(new Z["url Box"]().set("flags",1));var r=a.add("stbl");return r.add("stsd").addEntry(n),r.add("stts").set("sample_counts",[]).set("sample_deltas",[]),r.add("stsc").set("first_chunk",[]).set("samples_per_chunk",[]).set("sample_description_index",[]),r.add("stco").set("chunk_offsets",[]),r.add("stsz").set("sample_sizes",[]),this.moov.mvex.add("trex").set("track_id",d.id).set("default_sample_description_index",d.default_sample_description_index||1).set("default_sample_duration",d.default_sample_duration||0).set("default_sample_size",d.default_sample_size||0).set("default_sample_flags",d.default_sample_flags||0),this.buildTrakSampleLists(c),d.id}},Z.Box.prototype.computeSize=function(l){var d=l||new G;d.endianness=G.BIG_ENDIAN,this.write(d)},u.prototype.addSample=function(l,d,c){var t=c||{},a={},n=this.getTrackById(l);if(n!==null){a.number=n.samples.length,a.track_id=n.tkhd.track_id,a.timescale=n.mdia.mdhd.timescale,a.description_index=t.sample_description_index?t.sample_description_index-1:0,a.description=n.mdia.minf.stbl.stsd.entries[a.description_index],a.data=d,a.size=d.byteLength,a.alreadyRead=a.size,a.duration=t.duration||1,a.cts=t.cts||0,a.dts=t.dts||0,a.is_sync=t.is_sync||!1,a.is_leading=t.is_leading||0,a.depends_on=t.depends_on||0,a.is_depended_on=t.is_depended_on||0,a.has_redundancy=t.has_redundancy||0,a.degradation_priority=t.degradation_priority||0,a.offset=0,a.subsamples=t.subsamples,n.samples.push(a),n.samples_size+=a.size,n.samples_duration+=a.duration,n.first_dts===void 0&&(n.first_dts=t.dts),this.processSamples();var b=this.createSingleSampleMoof(a);return this.addBox(b),b.computeSize(),b.trafs[0].truns[0].data_offset=b.size+8,this.add("mdat").data=new Uint8Array(d),a}},u.prototype.createSingleSampleMoof=function(l){var d=0;l.is_sync?d=1<<25:d=65536;var c=new Z.moofBox;c.add("mfhd").set("sequence_number",this.nextMoofNumber),this.nextMoofNumber++;var t=c.add("traf"),a=this.getTrackById(l.track_id);return t.add("tfhd").set("track_id",l.track_id).set("flags",Z.TFHD_FLAG_DEFAULT_BASE_IS_MOOF),t.add("tfdt").set("baseMediaDecodeTime",l.dts-(a.first_dts||0)),t.add("trun").set("flags",Z.TRUN_FLAGS_DATA_OFFSET|Z.TRUN_FLAGS_DURATION|Z.TRUN_FLAGS_SIZE|Z.TRUN_FLAGS_FLAGS|Z.TRUN_FLAGS_CTS_OFFSET).set("data_offset",0).set("first_sample_flags",0).set("sample_count",1).set("sample_duration",[l.duration]).set("sample_size",[l.size]).set("sample_flags",[d]).set("sample_composition_time_offset",[l.cts-l.dts]),c},u.prototype.lastMoofIndex=0,u.prototype.samplesDataSize=0,u.prototype.resetTables=function(){var l,d,c,t,a,n,b,s;for(this.initial_duration=this.moov.mvhd.duration,this.moov.mvhd.duration=0,l=0;l<this.moov.traks.length;l++){d=this.moov.traks[l],d.tkhd.duration=0,d.mdia.mdhd.duration=0,c=d.mdia.minf.stbl.stco||d.mdia.minf.stbl.co64,c.chunk_offsets=[],t=d.mdia.minf.stbl.stsc,t.first_chunk=[],t.samples_per_chunk=[],t.sample_description_index=[],a=d.mdia.minf.stbl.stsz||d.mdia.minf.stbl.stz2,a.sample_sizes=[],n=d.mdia.minf.stbl.stts,n.sample_counts=[],n.sample_deltas=[],b=d.mdia.minf.stbl.ctts,b&&(b.sample_counts=[],b.sample_offsets=[]),s=d.mdia.minf.stbl.stss;var X=d.mdia.minf.stbl.boxes.indexOf(s);X!=-1&&(d.mdia.minf.stbl.boxes[X]=null)}},u.initSampleGroups=function(l,d,c,t,a){var n,b,s,X;function p(V,y,r){this.grouping_type=V,this.grouping_type_parameter=y,this.sbgp=r,this.last_sample_in_run=-1,this.entry_index=-1}for(d&&(d.sample_groups_info=[]),l.sample_groups_info||(l.sample_groups_info=[]),b=0;b<c.length;b++){for(X=c[b].grouping_type+"/"+c[b].grouping_type_parameter,s=new p(c[b].grouping_type,c[b].grouping_type_parameter,c[b]),d&&(d.sample_groups_info[X]=s),l.sample_groups_info[X]||(l.sample_groups_info[X]=s),n=0;n<t.length;n++)t[n].grouping_type===c[b].grouping_type&&(s.description=t[n],s.description.used=!0);if(a)for(n=0;n<a.length;n++)a[n].grouping_type===c[b].grouping_type&&(s.fragment_description=a[n],s.fragment_description.used=!0,s.is_fragment=!0)}if(d){if(a)for(b=0;b<a.length;b++)!a[b].used&&a[b].version>=2&&(X=a[b].grouping_type+"/0",s=new p(a[b].grouping_type,0),s.is_fragment=!0,d.sample_groups_info[X]||(d.sample_groups_info[X]=s))}else for(b=0;b<t.length;b++)!t[b].used&&t[b].version>=2&&(X=t[b].grouping_type+"/0",s=new p(t[b].grouping_type,0),l.sample_groups_info[X]||(l.sample_groups_info[X]=s))},u.setSampleGroupProperties=function(l,d,c,t){var a,n;d.sample_groups=[];for(a in t)if(d.sample_groups[a]={},d.sample_groups[a].grouping_type=t[a].grouping_type,d.sample_groups[a].grouping_type_parameter=t[a].grouping_type_parameter,c>=t[a].last_sample_in_run&&(t[a].last_sample_in_run<0&&(t[a].last_sample_in_run=0),t[a].entry_index++,t[a].entry_index<=t[a].sbgp.entries.length-1&&(t[a].last_sample_in_run+=t[a].sbgp.entries[t[a].entry_index].sample_count)),t[a].entry_index<=t[a].sbgp.entries.length-1?d.sample_groups[a].group_description_index=t[a].sbgp.entries[t[a].entry_index].group_description_index:d.sample_groups[a].group_description_index=-1,d.sample_groups[a].group_description_index!==0){var b;t[a].fragment_description?b=t[a].fragment_description:b=t[a].description,d.sample_groups[a].group_description_index>0?(d.sample_groups[a].group_description_index>65535?n=(d.sample_groups[a].group_description_index>>16)-1:n=d.sample_groups[a].group_description_index-1,b&&n>=0&&(d.sample_groups[a].description=b.entries[n])):b&&b.version>=2&&b.default_group_description_index>0&&(d.sample_groups[a].description=b.entries[b.default_group_description_index-1])}},u.process_sdtp=function(l,d,c){d&&(l?(d.is_leading=l.is_leading[c],d.depends_on=l.sample_depends_on[c],d.is_depended_on=l.sample_is_depended_on[c],d.has_redundancy=l.sample_has_redundancy[c]):(d.is_leading=0,d.depends_on=0,d.is_depended_on=0,d.has_redundancy=0))},u.prototype.buildSampleLists=function(){var l,d;for(l=0;l<this.moov.traks.length;l++)d=this.moov.traks[l],this.buildTrakSampleLists(d)},u.prototype.buildTrakSampleLists=function(l){var d,c,t,a,n,b,s,X,p,V,y,r,W,J,z,ll,ml,O,C,w,el,yl,P,nl;if(l.samples=[],l.samples_duration=0,l.samples_size=0,c=l.mdia.minf.stbl.stco||l.mdia.minf.stbl.co64,t=l.mdia.minf.stbl.stsc,a=l.mdia.minf.stbl.stsz||l.mdia.minf.stbl.stz2,n=l.mdia.minf.stbl.stts,b=l.mdia.minf.stbl.ctts,s=l.mdia.minf.stbl.stss,X=l.mdia.minf.stbl.stsd,p=l.mdia.minf.stbl.subs,r=l.mdia.minf.stbl.stdp,V=l.mdia.minf.stbl.sbgps,y=l.mdia.minf.stbl.sgpds,O=-1,C=-1,w=-1,el=-1,yl=0,P=0,nl=0,u.initSampleGroups(l,null,V,y),!(typeof a>"u")){for(d=0;d<a.sample_sizes.length;d++){var L={};L.number=d,L.track_id=l.tkhd.track_id,L.timescale=l.mdia.mdhd.timescale,L.alreadyRead=0,l.samples[d]=L,L.size=a.sample_sizes[d],l.samples_size+=L.size,d===0?(J=1,W=0,L.chunk_index=J,L.chunk_run_index=W,ml=t.samples_per_chunk[W],ll=0,W+1<t.first_chunk.length?z=t.first_chunk[W+1]-1:z=1/0):d<ml?(L.chunk_index=J,L.chunk_run_index=W):(J++,L.chunk_index=J,ll=0,J<=z||(W++,W+1<t.first_chunk.length?z=t.first_chunk[W+1]-1:z=1/0),L.chunk_run_index=W,ml+=t.samples_per_chunk[W]),L.description_index=t.sample_description_index[L.chunk_run_index]-1,L.description=X.entries[L.description_index],L.offset=c.chunk_offsets[L.chunk_index-1]+ll,ll+=L.size,d>O&&(C++,O<0&&(O=0),O+=n.sample_counts[C]),d>0?(l.samples[d-1].duration=n.sample_deltas[C],l.samples_duration+=l.samples[d-1].duration,L.dts=l.samples[d-1].dts+l.samples[d-1].duration):L.dts=0,b?(d>=w&&(el++,w<0&&(w=0),w+=b.sample_counts[el]),L.cts=l.samples[d].dts+b.sample_offsets[el]):L.cts=L.dts,s?(d==s.sample_numbers[yl]-1?(L.is_sync=!0,yl++):(L.is_sync=!1,L.degradation_priority=0),p&&p.entries[P].sample_delta+nl==d+1&&(L.subsamples=p.entries[P].subsamples,nl+=p.entries[P].sample_delta,P++)):L.is_sync=!0,u.process_sdtp(l.mdia.minf.stbl.sdtp,L,L.number),r?L.degradation_priority=r.priority[d]:L.degradation_priority=0,p&&p.entries[P].sample_delta+nl==d&&(L.subsamples=p.entries[P].subsamples,nl+=p.entries[P].sample_delta),(V.length>0||y.length>0)&&u.setSampleGroupProperties(l,L,d,l.sample_groups_info)}d>0&&(l.samples[d-1].duration=Math.max(l.mdia.mdhd.duration-l.samples[d-1].dts,0),l.samples_duration+=l.samples[d-1].duration)}},u.prototype.updateSampleLists=function(){var l,d,c,t,a,n,b,s,X,p,V,y,r,W,J;if(this.moov!==void 0){for(;this.lastMoofIndex<this.moofs.length;)if(X=this.moofs[this.lastMoofIndex],this.lastMoofIndex++,X.type=="moof")for(p=X,l=0;l<p.trafs.length;l++){for(V=p.trafs[l],y=this.getTrackById(V.tfhd.track_id),r=this.getTrexById(V.tfhd.track_id),V.tfhd.flags&Z.TFHD_FLAG_SAMPLE_DESC?t=V.tfhd.default_sample_description_index:t=r?r.default_sample_description_index:1,V.tfhd.flags&Z.TFHD_FLAG_SAMPLE_DUR?a=V.tfhd.default_sample_duration:a=r?r.default_sample_duration:0,V.tfhd.flags&Z.TFHD_FLAG_SAMPLE_SIZE?n=V.tfhd.default_sample_size:n=r?r.default_sample_size:0,V.tfhd.flags&Z.TFHD_FLAG_SAMPLE_FLAGS?b=V.tfhd.default_sample_flags:b=r?r.default_sample_flags:0,V.sample_number=0,V.sbgps.length>0&&u.initSampleGroups(y,V,V.sbgps,y.mdia.minf.stbl.sgpds,V.sgpds),d=0;d<V.truns.length;d++){var z=V.truns[d];for(c=0;c<z.sample_count;c++){W={},W.moof_number=this.lastMoofIndex,W.number_in_traf=V.sample_number,V.sample_number++,W.number=y.samples.length,V.first_sample_index=y.samples.length,y.samples.push(W),W.track_id=y.tkhd.track_id,W.timescale=y.mdia.mdhd.timescale,W.description_index=t-1,W.description=y.mdia.minf.stbl.stsd.entries[W.description_index],W.size=n,z.flags&Z.TRUN_FLAGS_SIZE&&(W.size=z.sample_size[c]),y.samples_size+=W.size,W.duration=a,z.flags&Z.TRUN_FLAGS_DURATION&&(W.duration=z.sample_duration[c]),y.samples_duration+=W.duration,y.first_traf_merged||c>0?W.dts=y.samples[y.samples.length-2].dts+y.samples[y.samples.length-2].duration:(V.tfdt?W.dts=V.tfdt.baseMediaDecodeTime:W.dts=0,y.first_traf_merged=!0),W.cts=W.dts,z.flags&Z.TRUN_FLAGS_CTS_OFFSET&&(W.cts=W.dts+z.sample_composition_time_offset[c]),J=b,z.flags&Z.TRUN_FLAGS_FLAGS?J=z.sample_flags[c]:c===0&&z.flags&Z.TRUN_FLAGS_FIRST_FLAG&&(J=z.first_sample_flags),W.is_sync=!(J>>16&1),W.is_leading=J>>26&3,W.depends_on=J>>24&3,W.is_depended_on=J>>22&3,W.has_redundancy=J>>20&3,W.degradation_priority=J&65535;var ll=!!(V.tfhd.flags&Z.TFHD_FLAG_BASE_DATA_OFFSET),ml=!!(V.tfhd.flags&Z.TFHD_FLAG_DEFAULT_BASE_IS_MOOF),O=!!(z.flags&Z.TRUN_FLAGS_DATA_OFFSET),C=0;ll?C=V.tfhd.base_data_offset:ml||d===0?C=p.start:C=s,d===0&&c===0?O?W.offset=C+z.data_offset:W.offset=C:W.offset=s,s=W.offset+W.size,(V.sbgps.length>0||V.sgpds.length>0||y.mdia.minf.stbl.sbgps.length>0||y.mdia.minf.stbl.sgpds.length>0)&&u.setSampleGroupProperties(y,W,W.number_in_traf,V.sample_groups_info)}}if(V.subs){y.has_fragment_subsamples=!0;var w=V.first_sample_index;for(d=0;d<V.subs.entries.length;d++)w+=V.subs.entries[d].sample_delta,W=y.samples[w-1],W.subsamples=V.subs.entries[d].subsamples}}}},u.prototype.getSample=function(l,d){var c,t=l.samples[d];if(!this.moov)return null;if(!t.data)t.data=new Uint8Array(t.size),t.alreadyRead=0,this.samplesDataSize+=t.size,m.debug("ISOFile","Allocating sample #"+d+" on track #"+l.tkhd.track_id+" of size "+t.size+" (total: "+this.samplesDataSize+")");else if(t.alreadyRead==t.size)return t;for(;;){var a=this.stream.findPosition(!0,t.offset+t.alreadyRead,!1);if(a>-1){c=this.stream.buffers[a];var n=c.byteLength-(t.offset+t.alreadyRead-c.fileStart);if(t.size-t.alreadyRead<=n)return m.debug("ISOFile","Getting sample #"+d+" data (alreadyRead: "+t.alreadyRead+" offset: "+(t.offset+t.alreadyRead-c.fileStart)+" read size: "+(t.size-t.alreadyRead)+" full size: "+t.size+")"),G.memcpy(t.data.buffer,t.alreadyRead,c,t.offset+t.alreadyRead-c.fileStart,t.size-t.alreadyRead),c.usedBytes+=t.size-t.alreadyRead,this.stream.logBufferLevel(),t.alreadyRead=t.size,t;if(n===0)return null;m.debug("ISOFile","Getting sample #"+d+" partial data (alreadyRead: "+t.alreadyRead+" offset: "+(t.offset+t.alreadyRead-c.fileStart)+" read size: "+n+" full size: "+t.size+")"),G.memcpy(t.data.buffer,t.alreadyRead,c,t.offset+t.alreadyRead-c.fileStart,n),t.alreadyRead+=n,c.usedBytes+=n,this.stream.logBufferLevel()}else return null}},u.prototype.releaseSample=function(l,d){var c=l.samples[d];return c.data?(this.samplesDataSize-=c.size,c.data=null,c.alreadyRead=0,c.size):0},u.prototype.getAllocatedSampleDataSize=function(){return this.samplesDataSize},u.prototype.getCodecs=function(){var l,d="";for(l=0;l<this.moov.traks.length;l++){var c=this.moov.traks[l];l>0&&(d+=","),d+=c.mdia.minf.stbl.stsd.entries[0].getCodec()}return d},u.prototype.getTrexById=function(l){var d;if(!this.moov||!this.moov.mvex)return null;for(d=0;d<this.moov.mvex.trexs.length;d++){var c=this.moov.mvex.trexs[d];if(c.track_id==l)return c}return null},u.prototype.getTrackById=function(l){if(this.moov===void 0)return null;for(var d=0;d<this.moov.traks.length;d++){var c=this.moov.traks[d];if(c.tkhd.track_id==l)return c}return null},u.prototype.items=[],u.prototype.itemsDataSize=0,u.prototype.flattenItemInfo=function(){var l=this.items,d,c,t,a=this.meta;if(a!=null&&a.hdlr!==void 0&&a.iinf!==void 0){for(d=0;d<a.iinf.item_infos.length;d++)t={},t.id=a.iinf.item_infos[d].item_ID,l[t.id]=t,t.ref_to=[],t.name=a.iinf.item_infos[d].item_name,a.iinf.item_infos[d].protection_index>0&&(t.protection=a.ipro.protections[a.iinf.item_infos[d].protection_index-1]),a.iinf.item_infos[d].item_type?t.type=a.iinf.item_infos[d].item_type:t.type="mime",t.content_type=a.iinf.item_infos[d].content_type,t.content_encoding=a.iinf.item_infos[d].content_encoding;if(a.iloc)for(d=0;d<a.iloc.items.length;d++){var n=a.iloc.items[d];switch(t=l[n.item_ID],n.data_reference_index!==0&&(m.warn("Item storage with reference to other files: not supported"),t.source=a.dinf.boxes[n.data_reference_index-1]),n.construction_method){case 0:break;case 1:m.warn("Item storage with construction_method : not supported");break;case 2:m.warn("Item storage with construction_method : not supported");break}for(t.extents=[],t.size=0,c=0;c<n.extents.length;c++)t.extents[c]={},t.extents[c].offset=n.extents[c].extent_offset+n.base_offset,t.extents[c].length=n.extents[c].extent_length,t.extents[c].alreadyRead=0,t.size+=t.extents[c].length}if(a.pitm&&(l[a.pitm.item_id].primary=!0),a.iref)for(d=0;d<a.iref.references.length;d++){var b=a.iref.references[d];for(c=0;c<b.references.length;c++)l[b.from_item_ID].ref_to.push({type:b.type,id:b.references[c]})}if(a.iprp)for(var s=0;s<a.iprp.ipmas.length;s++){var X=a.iprp.ipmas[s];for(d=0;d<X.associations.length;d++){var p=X.associations[d];for(t=l[p.id],t.properties===void 0&&(t.properties={},t.properties.boxes=[]),c=0;c<p.props.length;c++){var V=p.props[c];if(V.property_index>0&&V.property_index-1<a.iprp.ipco.boxes.length){var y=a.iprp.ipco.boxes[V.property_index-1];t.properties[y.type]=y,t.properties.boxes.push(y)}}}}}},u.prototype.getItem=function(l){var d,c;if(!this.meta)return null;if(c=this.items[l],!c.data&&c.size)c.data=new Uint8Array(c.size),c.alreadyRead=0,this.itemsDataSize+=c.size,m.debug("ISOFile","Allocating item #"+l+" of size "+c.size+" (total: "+this.itemsDataSize+")");else if(c.alreadyRead===c.size)return c;for(var t=0;t<c.extents.length;t++){var a=c.extents[t];if(a.alreadyRead!==a.length){var n=this.stream.findPosition(!0,a.offset+a.alreadyRead,!1);if(n>-1){d=this.stream.buffers[n];var b=d.byteLength-(a.offset+a.alreadyRead-d.fileStart);if(a.length-a.alreadyRead<=b)m.debug("ISOFile","Getting item #"+l+" extent #"+t+" data (alreadyRead: "+a.alreadyRead+" offset: "+(a.offset+a.alreadyRead-d.fileStart)+" read size: "+(a.length-a.alreadyRead)+" full extent size: "+a.length+" full item size: "+c.size+")"),G.memcpy(c.data.buffer,c.alreadyRead,d,a.offset+a.alreadyRead-d.fileStart,a.length-a.alreadyRead),d.usedBytes+=a.length-a.alreadyRead,this.stream.logBufferLevel(),c.alreadyRead+=a.length-a.alreadyRead,a.alreadyRead=a.length;else return m.debug("ISOFile","Getting item #"+l+" extent #"+t+" partial data (alreadyRead: "+a.alreadyRead+" offset: "+(a.offset+a.alreadyRead-d.fileStart)+" read size: "+b+" full extent size: "+a.length+" full item size: "+c.size+")"),G.memcpy(c.data.buffer,c.alreadyRead,d,a.offset+a.alreadyRead-d.fileStart,b),a.alreadyRead+=b,c.alreadyRead+=b,d.usedBytes+=b,this.stream.logBufferLevel(),null}else return null}}return c.alreadyRead===c.size?c:null},u.prototype.releaseItem=function(l){var d=this.items[l];if(d.data){this.itemsDataSize-=d.size,d.data=null,d.alreadyRead=0;for(var c=0;c<d.extents.length;c++){var t=d.extents[c];t.alreadyRead=0}return d.size}else return 0},u.prototype.processItems=function(l){for(var d in this.items){var c=this.items[d];this.getItem(c.id),l&&!c.sent&&(l(c),c.sent=!0,c.data=null)}},u.prototype.hasItem=function(l){for(var d in this.items){var c=this.items[d];if(c.name===l)return c.id}return-1},u.prototype.getMetaHandler=function(){return this.meta?this.meta.hdlr.handler:null},u.prototype.getPrimaryItem=function(){return!this.meta||!this.meta.pitm?null:this.getItem(this.meta.pitm.item_id)},u.prototype.itemToFragmentedTrackFile=function(l){var d=l||{},c=null;if(d.itemId?c=this.getItem(d.itemId):c=this.getPrimaryItem(),c==null)return null;var t=new u;t.discardMdatData=!1;var a={type:c.type,description_boxes:c.properties.boxes};c.properties.ispe&&(a.width=c.properties.ispe.image_width,a.height=c.properties.ispe.image_height);var n=t.addTrack(a);return n?(t.addSample(n,c.data),t):null},u.prototype.write=function(l){for(var d=0;d<this.boxes.length;d++)this.boxes[d].write(l)},u.prototype.createFragment=function(l,d,c){var t=this.getTrackById(l),a=this.getSample(t,d);if(a==null)return this.setNextSeekPositionFromSample(t.samples[d]),null;var n=c||new G;n.endianness=G.BIG_ENDIAN;var b=this.createSingleSampleMoof(a);b.write(n),b.trafs[0].truns[0].data_offset=b.size+8,m.debug("MP4Box","Adjusting data_offset with new value "+b.trafs[0].truns[0].data_offset),n.adjustUint32(b.trafs[0].truns[0].data_offset_position,b.trafs[0].truns[0].data_offset);var s=new Z.mdatBox;return s.data=a.data,s.write(n),n},u.writeInitializationSegment=function(l,d,c,t){var a;m.debug("ISOFile","Generating initialization segment");var n=new G;n.endianness=G.BIG_ENDIAN,l.write(n);var b=d.add("mvex");for(c&&b.add("mehd").set("fragment_duration",c),a=0;a<d.traks.length;a++)b.add("trex").set("track_id",d.traks[a].tkhd.track_id).set("default_sample_description_index",1).set("default_sample_duration",t).set("default_sample_size",0).set("default_sample_flags",65536);return d.write(n),n.buffer},u.prototype.save=function(l){var d=new G;d.endianness=G.BIG_ENDIAN,this.write(d),d.save(l)},u.prototype.getBuffer=function(){var l=new G;return l.endianness=G.BIG_ENDIAN,this.write(l),l.buffer},u.prototype.initializeSegmentation=function(){var l,d,c,t;for(this.onSegment===null&&m.warn("MP4Box","No segmentation callback set!"),this.isFragmentationInitialized||(this.isFragmentationInitialized=!0,this.nextMoofNumber=0,this.resetTables()),d=[],l=0;l<this.fragmentedTracks.length;l++){var a=new Z.moovBox;a.mvhd=this.moov.mvhd,a.boxes.push(a.mvhd),c=this.getTrackById(this.fragmentedTracks[l].id),a.boxes.push(c),a.traks.push(c),t={},t.id=c.tkhd.track_id,t.user=this.fragmentedTracks[l].user,t.buffer=u.writeInitializationSegment(this.ftyp,a,this.moov.mvex&&this.moov.mvex.mehd?this.moov.mvex.mehd.fragment_duration:void 0,this.moov.traks[l].samples.length>0?this.moov.traks[l].samples[0].duration:0),d.push(t)}return d},Z.Box.prototype.printHeader=function(l){this.size+=8,this.size>R&&(this.size+=8),this.type==="uuid"&&(this.size+=16),l.log(l.indent+"size:"+this.size),l.log(l.indent+"type:"+this.type)},Z.FullBox.prototype.printHeader=function(l){this.size+=4,Z.Box.prototype.printHeader.call(this,l),l.log(l.indent+"version:"+this.version),l.log(l.indent+"flags:"+this.flags)},Z.Box.prototype.print=function(l){this.printHeader(l)},Z.ContainerBox.prototype.print=function(l){this.printHeader(l);for(var d=0;d<this.boxes.length;d++)if(this.boxes[d]){var c=l.indent;l.indent+=" ",this.boxes[d].print(l),l.indent=c}},u.prototype.print=function(l){l.indent="";for(var d=0;d<this.boxes.length;d++)this.boxes[d]&&this.boxes[d].print(l)},Z.mvhdBox.prototype.print=function(l){Z.FullBox.prototype.printHeader.call(this,l),l.log(l.indent+"creation_time: "+this.creation_time),l.log(l.indent+"modification_time: "+this.modification_time),l.log(l.indent+"timescale: "+this.timescale),l.log(l.indent+"duration: "+this.duration),l.log(l.indent+"rate: "+this.rate),l.log(l.indent+"volume: "+(this.volume>>8)),l.log(l.indent+"matrix: "+this.matrix.join(", ")),l.log(l.indent+"next_track_id: "+this.next_track_id)},Z.tkhdBox.prototype.print=function(l){Z.FullBox.prototype.printHeader.call(this,l),l.log(l.indent+"creation_time: "+this.creation_time),l.log(l.indent+"modification_time: "+this.modification_time),l.log(l.indent+"track_id: "+this.track_id),l.log(l.indent+"duration: "+this.duration),l.log(l.indent+"volume: "+(this.volume>>8)),l.log(l.indent+"matrix: "+this.matrix.join(", ")),l.log(l.indent+"layer: "+this.layer),l.log(l.indent+"alternate_group: "+this.alternate_group),l.log(l.indent+"width: "+this.width),l.log(l.indent+"height: "+this.height)};var B={};B.createFile=function(l,d){var c=l!==void 0?l:!0,t=new u(d);return t.discardMdatData=!c,t},h.createFile=B.createFile})(kl);const pl={sampleRate:48e3,channelCount:2,codec:"mp4a.40.2"};var il,v,j,tl,g,A,Wl,rl;const sl=class{constructor(h,m={}){E(this,Wl),f(this,"ready"),E(this,il,{duration:0,width:0,height:0}),E(this,v,new Float32Array),E(this,j,new Float32Array),E(this,tl,0),E(this,g,0),E(this,A,void 0),D(this,A,hl({loop:!1,volume:1},m)),this.ready=Sl(this,Wl,rl).call(this,h).then(()=>({width:0,height:0,duration:m.loop?1/0:Y(this,il).duration}))}getPCMData(){return[Y(this,v),Y(this,j)]}tick(h){return dl(this,null,function*(){if(h<Y(this,tl))throw Error("time not allow rollback");if(!Y(this,A).loop&&h>=Y(this,il).duration)return{audio:[],state:"done"};const m=h-Y(this,tl);D(this,tl,h);const e=Math.ceil(m*(pl.sampleRate/1e6)),G=Y(this,g)+e,R=Y(this,A).loop?[Ll(Y(this,v),Y(this,g),G),Ll(Y(this,j),Y(this,g),G)]:[Y(this,v).slice(Y(this,g),G),Y(this,j).slice(Y(this,g),G)];return D(this,g,G),{audio:R,state:"success"}})}destroy(){D(this,v,new Float32Array(0)),D(this,j,new Float32Array(0)),T.info("---- audioclip destroy ----")}};let fl=sl;il=new WeakMap,v=new WeakMap,j=new WeakMap,tl=new WeakMap,g=new WeakMap,A=new WeakMap,Wl=new WeakSet,rl=function(h){return dl(this,null,function*(){var R;sl.ctx==null&&(sl.ctx=new AudioContext({sampleRate:pl.sampleRate}));const m=performance.now(),e=h instanceof ReadableStream?yield Tl(h,sl.ctx):h;T.info("Audio clip decoded complete:",performance.now()-m);const G=Y(this,A).volume;if(G!==1)for(const o of e)for(let H=0;H<o.length;H+=1)o[H]*=G;Y(this,il).duration=e[0].length/pl.sampleRate*1e6,D(this,v,e[0]),D(this,j,(R=e[1])!=null?R:Y(this,v)),T.info("Audio clip convert to AudioData, time:",performance.now()-m)})},f(fl,"ctx",null);function Tl(h,m){return dl(this,null,function*(){const e=yield new Response(h).arrayBuffer();return Cl(yield m.decodeAudioData(e))})}const M=class{constructor(h,m,e,G,R){f(this,"x",0),f(this,"y",0),f(this,"w",0),f(this,"h",0),f(this,"angle",0),f(this,"master",null),this.x=h!=null?h:0,this.y=m!=null?m:0,this.w=e!=null?e:0,this.h=G!=null?G:0,this.master=R!=null?R:null}get center(){const{x:h,y:m,w:e,h:G}=this;return{x:h+e/2,y:m+G/2}}get ctrls(){const{w:h,h:m}=this,e=M.CTRL_SIZE,G=e/2,R=h/2,o=m/2,H=e*1.5,Z=H/2;return{t:new M(-G,-o-G,e,e,this),b:new M(-G,o-G,e,e,this),l:new M(-R-G,-G,e,e,this),r:new M(R-G,-G,e,e,this),lt:new M(-R-G,-o-G,e,e,this),lb:new M(-R-G,o-G,e,e,this),rt:new M(R-G,-o-G,e,e,this),rb:new M(R-G,o-G,e,e,this),rotate:new M(-Z,-o-e*2-Z,H,H,this)}}clone(){const{x:h,y:m,w:e,h:G,master:R}=this;return new M(h,m,e,G,R)}checkHit(h,m){var t,a;let{angle:e,center:G,x:R,y:o,w:H,h:Z,master:K}=this;const U=(t=K==null?void 0:K.center)!=null?t:G,u=(a=K==null?void 0:K.angle)!=null?a:e;K==null&&(R=R-U.x,o=o-U.y);const B=h-U.x,l=m-U.y;let d=B,c=l;return u!==0&&(d=B*Math.cos(u)+l*Math.sin(u),c=l*Math.cos(u)-B*Math.sin(u)),!(d<R||d>R+H||c<o||c>o+Z)}};f(M,"CTRL_SIZE",16);const Yl="",zl=typeof window<"u"&&window.Blob&&new Blob([atob(Yl)],{type:"text/javascript;charset=utf-8"});function vl(){let h;try{if(h=zl&&(window.URL||window.webkitURL).createObjectURL(zl),!h)throw"";return new Worker(h)}catch(m){return new Worker("data:application/javascript;base64,"+Yl)}finally{h&&(window.URL||window.webkitURL).revokeObjectURL(h)}}var _=(h=>(h.SafeExit="SafeExit",h.Stop="Stop",h.Paused="Paused",h.Start="Start",h.OutputStream="OutputStream",h))(_||{}),al,q,Q,$;class gl{constructor(m,e={}){N(this,al,"inactive"),N(this,q,void 0),N(this,Q,void 0),N(this,$,null),ul(this,"outputStream",null),k(this,q,m),k(this,Q,hl({width:1280,height:720,bitrate:3e6,expectFPS:30,audioCodec:"aac"},e))}get state(){return I(this,al)}set state(m){throw new Error("state is readonly")}start(m=500){return dl(this,null,function*(){var K,U;T.info("AVRecorder.start recoding");const e=new vl;k(this,$,e);const G={},R=I(this,q).getVideoTracks()[0];R!=null&&(G.video=new MediaStreamTrackProcessor({track:R}).readable);const o=I(this,q).getAudioTracks()[0];let H=null;if(o!=null){const u=o.getSettings();H={codec:I(this,Q).audioCodec,sampleRate:(K=u.sampleRate)!=null?K:0,channelCount:(U=u.channelCount)!=null?U:0},T.info("AVRecorder recording audioConf:",H),G.audio=new MediaStreamTrackProcessor({track:o}).readable}if(G.audio==null&&G.video==null)throw new Error("No available tracks in MediaStream");const Z={video:{width:I(this,Q).width,height:I(this,Q).height,expectFPS:I(this,Q).expectFPS},audio:H,bitrate:I(this,Q).bitrate,timeSlice:m,streams:G};return e.postMessage({type:_.Start,data:Z},Object.values(G)),yield new Promise(u=>{e.addEventListener("message",B=>{const{type:l,data:d}=B.data;switch(l){case _.OutputStream:k(this,al,"recording"),this.outputStream=d,u();break}})})})}pause(){var m;(m=I(this,$))==null||m.postMessage({type:_.Paused,data:!0})}resume(){var m;(m=I(this,$))==null||m.postMessage({type:_.Paused,data:!1})}stop(){return dl(this,null,function*(){k(this,al,"inactive");const m=I(this,$);if(m!=null)return m.postMessage({type:_.Stop}),yield new Promise(e=>{m.addEventListener("message",G=>{const{type:R}=G.data;switch(R){case _.SafeExit:m.terminate(),I(this,q).getTracks().forEach(o=>{o.stop()}),this.outputStream=null,console.log(4444),e();break}})})})}}al=new WeakMap,q=new WeakMap,Q=new WeakMap,$=new WeakMap}}]);
}());